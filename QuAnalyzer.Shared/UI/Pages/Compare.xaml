<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:UC="using:QuAnalyzer.UI.Controls"
      xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
      xmlns:quanalyzer="using:QuAnalyzer" 
      xmlns:comparison="using:QuAnalyzer.Features.Comparison" 
      xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers" xmlns:collections="using:System.Collections" xmlns:pages="using:QuAnalyzer.UI.Popups"
      x:Class="QuAnalyzer.UI.Pages.Compare"
      x:Name="thisPage"
      mc:Ignorable="d"
      d:DesignWidth="800"
      d:DesignHeight="600">
    <Page.Resources>
        <CollectionViewSource Source="{x:Bind GroupedComparisonInstancesView}" x:Name="groupedViewSource" IsSourceGrouped="True" />
        <!--<Style x:Key="RedWhenNotZero" TargetType="DataGridCell">
            <Setter Target="Foreground" Value="OrangeRed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content.Text,RelativeSource={x:Static RelativeSource.Self}}" Value="0">
                    <Setter Target="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        <!--<local:SourceOrTargetPicker x:Key="SourceOrTargetPicker" />-->
    </Page.Resources>
    <Grid x:Name="gridMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="240" />
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="100" />
        </Grid.RowDefinitions>
        <CommandBar Content="Settings" DefaultLabelPosition="Right">
            <AppBarButton HorizontalAlignment="Center" ToolTipService.ToolTip="Start comparisons for the selected items" Command="{x:Bind RunCommand}" Icon="Play" Label="Run" />
            <AppBarSeparator />
            <AppBarToggleButton Label="Single-mapping mode" ToolTipService.ToolTip="Single-mapping mode" Icon="DisableUpdates" IsChecked="{x:Bind UseSingleMapping,Mode=TwoWay}" />
            <AppBarSeparator />
            <AppBarButton Label="Add" ToolTipService.ToolTip="Add a mapping" Icon="Add" IsEnabled="{x:Bind UseSingleMapping,Converter={StaticResource booleanNegator},Mode=OneWay}" Command="{x:Bind CreateMappingCommand}" />
            <AppBarButton Label="Automap" ToolTipService.ToolTip="Automap" Icon="Shuffle" IsEnabled="{x:Bind UseSingleMapping,Converter={StaticResource booleanNegator},Mode=OneWay}" Command="{x:Bind AutoMapCommand}" />
            <AppBarSeparator />
            <AppBarButton Label="Sel. all" ToolTipService.ToolTip="Select all" Icon="SelectAll" Click="btnSelectAll_Click" IsEnabled="{x:Bind UseSingleMapping,Converter={StaticResource booleanNegator},Mode=OneWay}" />
            <AppBarButton Label="Unsel. all" ToolTipService.ToolTip="Unselect all" Icon="ClearSelection" Click="btnUnSel_Click" IsEnabled="{x:Bind UseSingleMapping,Converter={StaticResource booleanNegator},Mode=OneWay}" />
        </CommandBar>
        <controls:DataGrid Grid.Row="1" Visibility="{x:Bind UseSingleMapping,Mode=OneWay,Converter={StaticResource boolToVisibilityNegateConverter}}" SelectionMode="Extended" ItemsSource="{x:Bind quanalyzer:App.Instance.CurrentProject.SourceMapper,Mode=OneWay}" ColumnWidth="18*" AutoGenerateColumns="False" x:Name="lstMappings" SelectionChanged="LstMappings_SelectionChanged">
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn Binding="{Binding Name}" Header="Mapping name" IsReadOnly="True" />
                <controls:DataGridTextColumn Binding="{Binding SourceName}" Header="Source" IsReadOnly="True" />
                <controls:DataGridTextColumn Binding="{Binding SourceRepository}" Header="Source repository" IsReadOnly="True" />
                <controls:DataGridTextColumn Binding="{Binding TargetName}" Header="Target" IsReadOnly="True" />
                <controls:DataGridTextColumn Binding="{Binding TargetRepository}" Header="Target repository" IsReadOnly="True" />
                <controls:DataGridTemplateColumn Header="Stream" Width="Auto">
                    <controls:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:DataType="comparison:SourcesMapper">
                            <ToggleSwitch Padding="5,0" Foreground="Black" IsOn="{x:Bind IsOrdered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DataTemplate>
                    </controls:DataGridTemplateColumn.CellTemplate>
                </controls:DataGridTemplateColumn>
                <controls:DataGridTemplateColumn IsReadOnly="True" CanUserResize="False" Width="100">
                    <controls:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate x:DataType="comparison:SourcesMapper">
                            <StackPanel Orientation="Horizontal">
                                <AppBarButton Command="{Binding EditMappingCommand,ElementName=thisPage}" CommandParameter="{x:Bind}" Foreground="Blue" Icon="Edit" />
                                <AppBarButton Command="{Binding DeleteMappingCommand,ElementName=thisPage}" CommandParameter="{x:Bind}" Foreground="OrangeRed" Icon="Delete" />
                            </StackPanel>
                        </DataTemplate>
                    </controls:DataGridTemplateColumn.CellTemplate>
                </controls:DataGridTemplateColumn>
            </controls:DataGrid.Columns>
        </controls:DataGrid>
        <pages:MappingsEditor Grid.Row="1" Visibility="{x:Bind UseSingleMapping,Mode=OneWay,Converter={StaticResource boolToVisibilityConverter}}" InitialMapping="{x:Bind SingleMap}" />
        <controls:GridSplitter Grid.Row="2" />
        <controls:DockPanel Grid.Column="0" Grid.Row="3">
            <UC:ExtendedDataGridView ItemsSource="{x:Bind GroupedComparisonInstancesView,Mode=OneWay}" ColumnWidth="*" AutoGenerateColumns="False" x:Name="allProgress" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" GridLinesVisibility="None" SelectionMode="Extended" CustomCommandBarContent="Results">
                <UC:ExtendedDataGridView.CustomCommandBarElements>
                    <AppBarElementContainer>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Global progress" FontSize="12" />
                            <ProgressBar FontSize="12" Maximum="100" Height="22" Width="292" Value="{x:Bind CurrentProgress,Mode=OneWay}" />
                        </StackPanel>
                    </AppBarElementContainer>
                    <AppBarSeparator />
                    <AppBarButton Label="Create report" ToolTipService.ToolTip="Create report" Icon="SaveLocal" Command="{x:Bind GlobalReportCommand}" />
                </UC:ExtendedDataGridView.CustomCommandBarElements>
                <UC:ExtendedDataGridView.RowGroupHeaderStyles>
                    <!-- Override the default Style for groups headers -->
                    <Style TargetType="controls:DataGridRowGroupHeader">
                        <Setter Target="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GroupItem">
                                    <StackPanel>
                                        <!--<controls:DataGridCell BorderThickness="0" Margin="0" Padding="0">-->
                                        <Grid Height="55" DataContext="{Binding Items[0]}" Background="#FFEEEEEE" >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock FontWeight="Bold" Text="{Binding Name, Mode=OneWay, FallbackValue='Mapping title'}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,10,0,0" />
                                            <TextBlock Text="{Binding Results.TotalTime,ElementName=thisPage,FallbackValue='-',Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5,0,0,10"/>
                                            <!--sys:String.Format('Ellapsed time: {0}ms',-->
                                            <!-- Progress and cancel button -->
                                            <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState>
                                                            <VisualState.StateTriggers>
                                                                <triggers:IsEqualStateTrigger Value="{Binding Results.LocalProgress,ElementName=thisPage}" To="100" />
                                                                <triggers:IsNotEqualStateTrigger Value="{Binding Results.Message,ElementName=thisPage}" To="{x:Null}" />
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Target="Visibility" Value="Collapsed" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid>
                                                    <ProgressBar BorderThickness="1" Value="{Binding Results.LocalProgress,ElementName=thisPage, Mode=OneWay, FallbackValue=0}" Maximum="100" Height="20" Width="150" Margin="10,0" />
                                                    <TextBlock Foreground="White" Text="{Binding Results.Progress,ElementName=thisPage, Mode=OneWay, FallbackValue='Current step'}" TextAlignment="Center" VerticalAlignment="Center" />
                                                </Grid>
                                                <AppBarButton Height="40" Command="{Binding CancelCommand,ElementName=thisPage}" CommandParameter="{Binding}" Width="40" Foreground="OrangeRed" Icon="Stop">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup>
                                                            <VisualState>
                                                                <VisualState.StateTriggers>
                                                                    <StateTrigger IsActive="{Binding IsEnabled}" />
                                                                </VisualState.StateTriggers>
                                                                <VisualState.Setters>
                                                                    <Setter Target="Opacity" Value="0.5" />
                                                                </VisualState.Setters>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </AppBarButton>
                                            </StackPanel>
                                            <!--Results-->
                                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState>
                                                            <VisualState.StateTriggers>
                                                                <triggers:IsEqualStateTrigger Value="{Binding Results.LocalProgress,ElementName=thisPage}" To="100" />
                                                                <triggers:IsNotEqualStateTrigger Value="{Binding Results.Message,ElementName=thisPage}" To="{x:Null}" />
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Target="Visibility" Value="Visible" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <!--<TextBlock FontWeight="Bold" Text="{x:Bind sys:String.Format('Matches: {0}', Results.MatchingCount), FallbackValue='-', Mode=OneWay}" Padding="5" VerticalAlignment="Center" />-->
                                                <AppBarButton Height="40" Command="{Binding DetailsCommand,ElementName=thisPage}" CommandParameter="{Binding}" Width="40" Icon="View" Foreground="Green" />
                                            </StackPanel>
                                            <!--Error-->
                                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Visibility="Collapsed">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState>
                                                            <VisualState.StateTriggers>
                                                                <triggers:IsNotEqualStateTrigger Value="{Binding Results.Message}" To="{x:Null}" />
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Target="Visibility" Value="Visible" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <SymbolIcon ToolTipService.ToolTip="{Binding Results.Message,ElementName=thisPage}" Height="40" Width="40" Margin="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" Symbol="Flag">
                                                    <SymbolIcon.Resources>
                                                        <Storyboard x:Key="sbBlink" AutoReverse="True" BeginTime="00:00:02" RepeatBehavior="Forever" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                                            <ColorAnimation From="Transparent" To="Red" Duration="0:0:2"/>
                                                        </Storyboard>
                                                    </SymbolIcon.Resources>
                                                    <!--<ContentControl.Style>
                                                                <Style TargetType="ContentControl">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="Visibility" Value="Visible">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard Storyboard="{StaticResource sbBlink}" x:Name="AnimationBeginStoryboard" />
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <RemoveStoryboard BeginStoryboardName="AnimationBeginStoryboard"/>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ContentControl.Style>-->
                                                </SymbolIcon>
                                            </StackPanel>
                                            <AppBarButton Grid.Column="2" Height="40" IsEnabled="False" Opacity="0.5" Command="{Binding DeleteCommand,ElementName=thisPage}" CommandParameter="{Binding}" Width="40" Foreground="OrangeRed" Icon="Delete">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup>
                                                        <VisualState x:Name="Default">
                                                            <VisualState.StateTriggers>
                                                                <triggers:IsEqualStateTrigger Value="{Binding Results.LocalProgress,ElementName=thisPage}" To="100" />
                                                                <triggers:IsNotEqualStateTrigger Value="{Binding Results.Message,ElementName=thisPage}" To="{x:Null}" />
                                                            </VisualState.StateTriggers>
                                                            <VisualState.Setters>
                                                                <Setter Target="IsEnabled" Value="True" />
                                                                <Setter Target="Opacity" Value="1" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </AppBarButton>
                                        </Grid>
                                        <!--</controls:DataGridCell>-->
                                        <ItemsPresenter />
                                    </StackPanel>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </UC:ExtendedDataGridView.RowGroupHeaderStyles>
                <!--<controls:DataGrid.Columns>
                    <controls:DataGridTextColumn Width="0" MinWidth="0" Header="Name" Binding="{x:Bind Name}" />
                    <controls:DataGridTextColumn Header="Item" Width="Auto" MinWidth="110" FontWeight="Bold">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="SourceName" />
                                <Binding Path="TargetName" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Header="Start time">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.StartTime" />
                                <Binding Path="Results.Target.StartTime" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Header="Loading time">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.LoadingTime" />
                                <Binding Path="Results.Target.LoadingTime" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Header="Count">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Count" />
                                <Binding Path="Results.Target.Count" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Width="0" MinWidth="0" Header="Matches" Binding="{Binding Results.MatchingCount, FallbackValue=0}" />
                    <controls:DataGridTextColumn Header="Missing" CellStyle="{StaticResource RedWhenNotZero}">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Missing.Count" />
                                <Binding Path="Results.Target.Missing.Count" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Header="Differences" Binding="{Binding Results.Source.Differences.Count}" CellStyle="{StaticResource RedWhenNotZero}" />
                    <controls:DataGridTextColumn Header="Look-alikes" CellStyle="{StaticResource RedWhenNotZero}">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Duplicates.Count" />
                                <Binding Path="Results.Target.Duplicates.Count" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                    <controls:DataGridTextColumn Header="Duplicates" CellStyle="{StaticResource RedWhenNotZero}">
                        <controls:DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" Path="AlternationIndex" />
                                <Binding Path="Results.Source.PerfectDups.Count" />
                                <Binding Path="Results.Target.PerfectDups.Count" />
                            </MultiBinding>
                        </controls:DataGridBoundColumn.Binding>
                    </controls:DataGridTextColumn>
                </controls:DataGrid.Columns>-->
            </UC:ExtendedDataGridView>
        </controls:DockPanel>
    </Grid>
</Page>
