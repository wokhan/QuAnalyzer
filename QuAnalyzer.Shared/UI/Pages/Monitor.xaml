<Page x:Class="QuAnalyzer.UI.Pages.Monitor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:monitor="using:QuAnalyzer.Features.Monitoring"
      xmlns:quanalyzer="using:QuAnalyzer"
      xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls" 
      xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers" 
      xmlns:charts="using:LiveChartsCore.SkiaSharpView.WinUI"
      mc:Ignorable="d"
      d:DesignHeight="700" d:DesignWidth="800"
      x:Name="me">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="170" Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="150" Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="150" Height="*" />
        </Grid.RowDefinitions>
        <CommandBar Grid.ColumnSpan="3">
            <AppBarButton x:Name="btnStart" Content="Run" ToolTipService.ToolTip="Start monitoring the selected items" BorderBrush="Green" Icon="Play" Command="{x:Bind RunCommand}" />
            <!--<Button Content="Run all" ToolTipService.ToolTip="Start monitoring all items" IsEnabled="{Binding Items.IsEmpty,ElementName=gridSteps,Converter={StaticResource booleanNegator}}" BorderBrush="Green" ext:CustomAdorner.Image="{StaticResource appbar_control_play}" Click="btnStartAll_Click" />-->
            <AppBarButton x:Name="btnStop" IsEnabled="{x:Bind btnStart.IsEnabled,Converter={StaticResource booleanNegator},Mode=OneWay}" Content="Stop" ToolTipService.ToolTip="Stop monitoring" BorderBrush="Red" Icon="Stop" Command="{x:Bind StopCommand}" />
            <AppBarSeparator />
            <AppBarButton Content="Add" ToolTipService.ToolTip="Add a step" BorderBrush="Green" Icon="Add" Command="{x:Bind MonitorAddCommand}" />
            <AppBarButton Content="Clear" ToolTipService.ToolTip="Remove all" BorderBrush="OrangeRed" Icon="Delete" Command="{x:Bind MonitorClearAllCommand}" />
            <AppBarToggleButton Content="Comparison mode" IsChecked="{x:Bind UseComparisonMode,Mode=TwoWay}" BorderBrush="Violet" Icon="Shuffle" />
            <AppBarSeparator />
            <AppBarElementContainer>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Occurences: " VerticalAlignment="Center" />
                    <NumberBox SpinButtonPlacementMode="Hidden" Width="40" VerticalContentAlignment="Center" Minimum="1" Value="{x:Bind Occurences,Mode=TwoWay}" Padding="0" Margin="2" VerticalAlignment="Center" />
                </StackPanel>
            </AppBarElementContainer>
            <AppBarSeparator />
            <AppBarElementContainer>
                <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                    <TextBlock Text="Parallelism: " VerticalAlignment="Center" />
                    <NumberBox SpinButtonPlacementMode="Hidden" Width="40" VerticalContentAlignment="Center" Minimum="1" Value="{x:Bind MaxParallel,Mode=TwoWay}" VerticalAlignment="Center" Padding="0" Margin="2" />
                </StackPanel>
            </AppBarElementContainer>
            <!--<Rectangle />
            <ToggleButton Content="Enable chart" ToolTipService.ToolTip="Enable charting" IsChecked="True" BorderBrush="Green" ext:CustomAdorner.Image="{StaticResource appbar_draw_pixel_fill_grid}" x:Name="btnEnable" />-->
        </CommandBar>
        <controls:DataGrid Grid.Row="1" SelectionMode="Extended" ItemsSource="{x:Bind quanalyzer:App.Instance.CurrentProject.TestDefinitions}" x:Name="gridSteps" AutoGenerateColumns="False" ColumnWidth="18*" IsReadOnly="True">
            <controls:DataGrid.Columns>
                <controls:DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <controls:DataGridComboBoxColumn Header="Provider" x:Name="lstDataProviders" MinWidth="150" ItemsSource="{x:Bind quanalyzer:App.Instance.CurrentProject.CurrentProviders}" DisplayMemberPath="Name" Binding="{Binding Provider}" />
                <controls:DataGridComboBoxColumn Header="Repository" MinWidth="150" ItemsSource="{Binding Provider.Repositories.Keys}" />
                <controls:DataGridComboBoxColumn Header="Type" Binding="{Binding Type}" DisplayMemberPath="Value" ItemsSource="{x:Bind monitor:MonitoringModes.MonitoringTypes}" />
                <controls:DataGridTextColumn Header="Interval" Binding="{Binding Interval}" />
                <controls:DataGridCheckBoxColumn Header="Run when started" Binding="{Binding RunWhenStarted}" />
                <controls:DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="100" />
                <controls:DataGridTemplateColumn Width="100">
                    <controls:DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <AppBarButton CommandParameter="{Binding}" Command="{Binding MonitorEditCommnad,ElementName=me}" Foreground="Blue" Icon="Edit" />
                                <AppBarButton Command="{Binding MonitorDeleteCommand,ElementName=me}" CommandParameter="{Binding}" Foreground="OrangeRed" Icon="Delete" />
                            </StackPanel>
                        </DataTemplate>
                    </controls:DataGridTemplateColumn.CellTemplate>
                </controls:DataGridTemplateColumn>
            </controls:DataGrid.Columns>
            <!--<controls:DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Attributes:" />
                            <ListBox Grid.Row="2" x:Name="lstAttributes" SelectionMode="Multiple">
                                <ListBox.Resources>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Target="IsSelected" Value="{Binding Value, Mode=OneWay}" />
                                    </Style>
                                </ListBox.Resources>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <CheckBox IsChecked="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                            <TextBlock Text="{Binding Key}" Grid.Column="1" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <TextBlock Text="Filter:" />
                                <TextBox x:Name="txtFilter" Text="{Binding Filter}" />
                            </StackPanel>
                            <TextBlock Grid.Column="1" Content="Preceding steps:" />
                            -->
            <!--<controls:DataGrid Grid.Row="2" Grid.Column="1" x:Name="lstPrec" Height="70" ItemsSource="{Binding CurrentProject.TestDefinitions, Source={x:Static quanalyzer:App.Instance}}">
                                <controls:DataGridCheckBoxColumn Header="Select" Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                                <controls:DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                <controls:DataGridTemplateColumn>
                                    <controls:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleButton Style="{StaticResource ToggleSwitch}" IsChecked="{Binding UseData}" />
                                        </DataTemplate>
                                    </controls:DataGridTemplateColumn.CellTemplate>
                                </controls:DataGridTemplateColumn>
                            </controls:DataGrid>-->
            <!--
                        </Grid>
                    </DataTemplate>
                </controls:DataGrid.RowDetailsTemplate>-->
        </controls:DataGrid>
        <controls:GridSplitter Grid.Row="2" Height="2" />
        <controls:DockPanel Grid.Row="3">
            <CommandBar controls:DockPanel.Dock="Top">
                <AppBarButton x:Name="btnGrCopy" Content="Copy" ToolTipService.ToolTip="Copy to clipboard" BorderBrush="Magenta" Icon="Copy" Click="btnGrCopy_Click" />
                <AppBarSeparator />
                <AppBarButton x:Name="btnGrCSV" Content="Excel" ToolTipService.ToolTip="Export to CSV" BorderBrush="Green" Icon="OpenFile" Click="btnGrCSV_Click" />
                <AppBarButton x:Name="btnGrHTML" Content="HTML" ToolTipService.ToolTip="Export to HTML" BorderBrush="Blue" Icon="OpenFile" Click="btnGrHTML_Click" />
            </CommandBar>
            <!--<CheckBox Content="Group by step name" x:Name="chkGroup" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-25" Checked="chkGroup_Checked" IsChecked="True" />-->
            <controls:DataGrid x:Name="gridResults" ItemsSource="{x:Bind MonitorResultsView}" IsReadOnly="True" AutoGenerateColumns="False">
                <controls:DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <controls:DataGrid Margin="10,0,0,0" Visibility="Collapsed" BorderThickness="1,0,0,0" BorderBrush="{ThemeResource AccentColorBrush}" IsReadOnly="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <triggers:IsEqualStateTrigger Value="{Binding Step.Type}" To="CHECKVAL" />
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="ItemsSource" Value="{Binding Data}" />
                                            <Setter Target="Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </controls:DataGrid>
                    </DataTemplate>
                </controls:DataGrid.RowDetailsTemplate>
                <controls:DataGrid.Columns>
                    <controls:DataGridTextColumn Header="Step" Binding="{Binding Step.Name}" Width="Auto" />
                    <controls:DataGridTextColumn Header="#" Binding="{Binding Occurence}" Width="Auto" />
                    <controls:DataGridTextColumn Header="Last check" Binding="{Binding LastCheck}" Width="Auto" />
                    <controls:DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="Auto" />
                    <controls:DataGridTextColumn Header="Duration" Binding="{Binding Duration[_TOTAL_DEFAULT]}" Width="Auto" />
                    <controls:DataGridTemplateColumn Header="Result" Width="*">
                        <controls:DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <controls:SwitchPresenter Value="{Binding ResultCount}">
                                    <controls:Case Value="-1">
                                        <ProgressBar IsIndeterminate="True" />
                                    </controls:Case>
                                    <controls:Case IsDefault="True">
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ResultCount}" />
                                    </controls:Case>
                                </controls:SwitchPresenter>
                            </DataTemplate>
                        </controls:DataGridTemplateColumn.CellTemplate>
                    </controls:DataGridTemplateColumn>
                </controls:DataGrid.Columns>
                <!--<controls:DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Target="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel>
                                                <controls:DataGridCell BorderThickness="0" Grid.ColumnSpan="2" Margin="0" Background="LightGray" Padding="0">
                                                    <Grid DataContext="{Binding Items[0]}" Height="Auto">
                                                        <TextBlock FontWeight="Bold" Text="{Binding Step.Name, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,3,0,0" />
                                                        <TextBlock Text="{Binding Step.Type, Mode=OneWay}" HorizontalAlignment="Right" TextAlignment="Right" VerticalAlignment="Top" Margin="0,0,40,0"/>
                                                        <Button x:Name="btnCancel" Style="{StaticResource MetroCircleButtonStyle}" Background="White" BorderBrush="OrangeRed" Tag="{Binding [4]}" VerticalAlignment="Top" BorderThickness="1" Height="40" HorizontalAlignment="Right" Width="40">
                                                            <Path Width="16" Height="16" Fill="OrangeRed" Stretch="Uniform">
                                                                <Path.Style>
                                                                    <Style TargetType="Path">
                                                                        <Setter Target="Data" Value="{iconPacks:Material Kind=DeleteOutline}" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Result}" Value="Checking..." >
                                                                                <Setter Target="Data" Value="{StaticResource appbar_close}" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Path.Style>
                                                            </Path>
                                                        </Button>
                                                    </Grid>
                                                </controls:DataGridCell>
                                                <ItemsPresenter />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <controls:DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </controls:DataGrid.GroupStyle>-->
            </controls:DataGrid>
        </controls:DockPanel>
        <controls:GridSplitter Grid.Row="4" Height="2" />
        <controls:DockPanel Grid.Row="5">
            <CommandBar controls:DockPanel.Dock="Top">
                <AppBarButton Content="Copy" ToolTipService.ToolTip="Copy to clipboard" BorderBrush="Magenta" Icon="Copy" IsEnabled="False" Command="{x:Bind MonitorCopyCommand}" CommandParameter="{Binding}" />
            </CommandBar>
            <charts:CartesianChart x:Name="chart">
                <!--Series="{x:Bind ResultSeriesMappings.Values}">-->
                <!--ScrollMode="X" DisableAnimations="True" Margin="0" DataTooltip="{x:Null}" Hoverable="False">
                <charts:CartesianChart.XAxes>
                    <charts:Axis></charts:Axis>
                </charts:CartesianChart.XAxes>
                <charts:CartesianChart.AxisY>
                    <charts:LogarithmicAxis></charts:LogarithmicAxis>
                    <charts:LogarithmicAxis Position="RightTop"></charts:LogarithmicAxis>
                </charts:CartesianChart.AxisY>-->
            </charts:CartesianChart>
        </controls:DockPanel>
    </Grid>
</Page>
