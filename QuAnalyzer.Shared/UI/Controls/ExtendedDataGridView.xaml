<UserControl  
          xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
          x:Class="QuAnalyzer.UI.Controls.ExtendedDataGridView"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          mc:Ignorable="d"
          xmlns:myself="using:QuAnalyzer.UI.Controls"
    xmlns:triggers="using:CommunityToolkit.WinUI.UI.Triggers"
          d:DesignHeight="600" d:DesignWidth="850"
          x:Name="me"
          BorderThickness="0">
    <UserControl.Resources>
        <Style TargetType="Border" x:Key="DragDropBorder">
            <Setter Target="Margin" Value="10" />
            <Setter Target="BorderBrush" Value="Gray" />
            <Setter Target="BorderThickness" Value="1" />
            <Setter Target="CornerRadius" Value="5" />
        </Style>
        <!--<Style TargetType="controls:DataGridColumnHeader" BasedOn="controls:DataGridColumnHeader">
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGrid_PreviewMouseLeftButtonDown" />
            <EventSetter Event="PreviewMouseMove" Handler="DataGrid_MouseMove" />
        </Style>-->
    </UserControl.Resources>
    <!-- Setting the template directly through DataGrid.Template doesn't work, using a Style to do so (as it might in fact be expected for a control which is NOT a usercontrol) -->
    <controls:DockPanel>
        <CommandBar controls:DockPanel.Dock="Top" x:Name="commandBar" Content="{x:Bind CustomCommandBarContent,Mode=OneWay}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Label="Copy" ToolTipService.ToolTip="Copy to clipboard" Icon="Copy" Command="{x:Bind CopyCommand}" />
                <AppBarSeparator />
                <AppBarButton Label="Export..." Icon="OpenFile">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="Excel" ToolTipService.ToolTip="Export to CSV" Icon="OpenFile" Command="{x:Bind ExportCSVCommand}" />
                            <MenuFlyoutItem Text="HTML" ToolTipService.ToolTip="Export to HTML" Icon="OpenFile" Command="{x:Bind ExportHTMLCommand}" />
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarSeparator Visibility="{x:Bind EnableAdvancedFilters,Converter={StaticResource boolToVisibilityConverter}}" />
                <AppBarToggleButton x:Name="btnAggregate" IsChecked="False" Label="Group/Filter" ToolTipService.ToolTip="Show aggregation and filtering options" Icon="Filter" Visibility="{x:Bind EnableAdvancedFilters,Converter={StaticResource boolToVisibilityConverter}}" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
        <Grid controls:DockPanel.Dock="Bottom" Height="30" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{ThemeResource ControlFillColorDefault}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock VerticalAlignment="Center" Margin="20,0" FontSize="12" Text="{x:Bind x:String.Format(x:Null, '{0} / {1} item(s) loaded', LoadedCount, ItemsCount), Mode=OneWay}" />
            <TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{x:Bind x:String.Format('Status: {0}',Status),Mode=OneWay,TargetNullValue='-'}" FontSize="12" />
            <ProgressBar x:Name="progressBar" Height="5" Background="{ThemeResource SystemChromeBlackHighColor}" Grid.Column="2" Value="{x:Bind LoadingProgress,Mode=OneWay}" IsIndeterminate="{x:Bind LoadingProgress.Equals(-1),Mode=OneWay}" Margin="10,0" Width="200" />
        </Grid>
        <Grid controls:DockPanel.Dock="Right" Width="250" Visibility="{x:Bind btnAggregate.IsChecked.Value,Converter={StaticResource boolToVisibilityConverter},Mode=OneWay}" Background="{ThemeResource ControlFillColorDefault}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel>
                    <Expander IsExpanded="True" Header="Filtering" Margin="5,10" MaxWidth="240" HorizontalAlignment="Stretch">
                        <controls:DockPanel HorizontalAlignment="Stretch">
                            <Grid controls:DockPanel.Dock="Bottom" Margin="0,10">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <TextBlock Text="Custom filter:" />
                                <TextBox TextWrapping="Wrap" MinHeight="25" HorizontalAlignment="Stretch" Text="{x:Bind CustomFilter,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="1">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup>
                                            <VisualState x:Name="Default">
                                                <VisualState.StateTriggers>
                                                    <triggers:CompareStateTrigger Value="{x:Bind CustomFilterError,Mode=OneWay}" To="{x:Null}" />
                                                </VisualState.StateTriggers>
                                                <VisualState.Setters>
                                                    <!--<Setter Target="Foreground" Value="Red" />-->
                                                    <Setter Target="ToolTipService.ToolTip" Value="{x:Bind CustomFilterError,Mode=OneWay}" />
                                                </VisualState.Setters>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </TextBox>
                            </Grid>
                            <controls:SwitchPresenter Value="{x:Bind IsFiltersEmpty,Mode=OneWay}">
                                <controls:Case Value="True" IsDefault="True">
                                    <Border Style="{StaticResource DragDropBorder}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <SymbolIcon Symbol="Placeholder" Width="20" Margin="10" Foreground="Gray" VerticalAlignment="Center" />
                                            <TextBlock Grid.Column="1" Margin="5" TextWrapping="Wrap" Text="Drag and drop column headers here to add a filter. You can also directly type a filter expression below." />
                                        </Grid>
                                    </Border>
                                </controls:Case>
                                <controls:Case Value="False">
                                    <controls:DataGrid Margin="-5" AllowDrop="True" AutoGenerateColumns="False" ItemsSource="{x:Bind Filters,Mode=OneWay}" x:Name="gridFilters" Drop="gridFilters_Drop">
                                        <controls:DataGrid.Columns>
                                            <controls:DataGridTextColumn Width="*" Header="Attribute" Binding="{Binding Attribute}" />
                                            <controls:DataGridComboBoxColumn Width="*" Header="Operator" DisplayMemberPath="Key" Binding="{Binding ComparerExpression,Mode=TwoWay}" ItemsSource="{x:Bind myself:FilterStruct.Operators}" />
                                            <controls:DataGridTextColumn Width="*" Header="Value" Binding="{Binding TargetValue}"/>
                                            <controls:DataGridTemplateColumn Width="*" CanUserSort="False">
                                                <controls:DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate x:DataType="myself:FilterStruct">
                                                        <AppBarButton CommandParameter="{Binding}" Command="{Binding DeleteFilterCommand,ElementName=me}" Foreground="OrangeRed" Icon="Delete" />
                                                    </DataTemplate>
                                                </controls:DataGridTemplateColumn.CellTemplate>
                                            </controls:DataGridTemplateColumn>
                                        </controls:DataGrid.Columns>
                                    </controls:DataGrid>
                                </controls:Case>
                            </controls:SwitchPresenter>
                        </controls:DockPanel>
                    </Expander>
                    <Expander IsExpanded="True" Header="Aggregation" MaxWidth="240" Margin="5" HorizontalAlignment="Stretch">
                        <StackPanel Margin="-5">
                            <TextBlock Text="Group by the following attributes:" />
                            <controls:SwitchPresenter Value="{x:Bind Grouping.Count,Mode=OneWay}">
                                <controls:Case Value="0">
                                    <Border Style="{StaticResource DragDropBorder}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <SymbolIcon Symbol="Placeholder" Width="20" Margin="5" VerticalAlignment="Center" Foreground="Gray" />
                                            <TextBlock Grid.Column="1" Margin="5" TextWrapping="Wrap" Text="Drag and drop column headers here to group by the related attribute" />
                                        </Grid>
                                    </Border>
                                </controls:Case>
                                <controls:Case IsDefault="True">
                                    <ListBox ItemsSource="{x:Bind Grouping}" AllowDrop="True" x:Name="lstGrouping" Drop="lstGrouping_Drop">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate x:DataType="x:String">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{x:Bind}" />
                                                    <AppBarButton Grid.Column="1" Foreground="OrangeRed" CommandParameter="{x:Bind}" Command="{Binding DeleteGroupCommand,ElementName=me}" Icon="Delete" />
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </controls:Case>
                            </controls:SwitchPresenter>
                            <TextBlock FontWeight="Bold" Text="Aggregated attributes:" />
                            <controls:DataGrid Grid.Column="1" x:Name="gridCompute" AutoGenerateColumns="False" AllowDrop="True" Drop="gridCompute_Drop" ItemsSource="{x:Bind Compute,Mode=OneWay}">
                                <!--<controls:DataGrid.Style>
                                                        <Style TargetType="DataGrid">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasItems,RelativeSource={x:Static RelativeSource.Self}}" Value="False">
                                                                    <Setter Target="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate>
                                                                                <Border Style="{StaticResource DragDropBorder}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="Auto" />
                                                                                            <ColumnDefinition Width="*" />
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <ContentControl Content="{iconPacks:Material Kind=TargetVariant}" Width="20" Margin="5" VerticalAlignment="Center" Foreground="Gray" />
                                                                                        <TextBlock Grid.Column="1" Margin="5" TextWrapping="Wrap" Text="Drag and drop column headers here or add a 'group by attribute' above to aggregate data. Note: at least one 'group by' attribute is required for the aggregation to be computed." FontStyle="Italic" />
                                                                                    </Grid>
                                                                                </Border>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:DataGrid.Style>-->
                                <controls:DataGrid.Columns>
                                    <controls:DataGridTextColumn Width="*" Header="Attribute" Binding="{Binding Attribute}" IsReadOnly="True" />
                                    <controls:DataGridComboBoxColumn Width="*" Header="Aggregation" DisplayMemberPath="Key" Binding="{Binding Aggregate,Mode=TwoWay}" ItemsSource="{x:Bind myself:ComputeStruct.Aggregations}" />
                                    <controls:DataGridTemplateColumn>
                                        <controls:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate x:DataType="myself:ComputeStruct">
                                                <AppBarButton CommandParameter="{x:Bind}" Command="{Binding DeleteAggregationCommand,ElementName=me}"  Icon="Delete" />
                                            </DataTemplate>
                                        </controls:DataGridTemplateColumn.CellTemplate>
                                    </controls:DataGridTemplateColumn>
                                </controls:DataGrid.Columns>
                            </controls:DataGrid>
                        </StackPanel>
                    </Expander>
                </StackPanel>
            </ScrollViewer>
            <CommandBar Grid.Row="1" HorizontalAlignment="Center" Background="Transparent">
                <AppBarButton Label="Apply" Icon="Forward" Command="{x:Bind ReloadCommand}"/>
                <AppBarButton Label="Clear" Icon="Cancel" Command="{x:Bind ClearAllCommand}" />
            </CommandBar>
        </Grid>
        <controls:DataGrid Sorting="gridData_Sorting" AutoGeneratingColumn="gridData_AutoGeneratingColumn" x:Name="gridData" IsReadOnly="True" CanUserSortColumns="True" CanUserReorderColumns="True" BorderThickness="0" ColumnWidth="Auto">
            <!--<controls:DataGrid.Resources>
                            <Style TargetType="DataGridColumn" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="DataGrid_PreviewMouseLeftButtonDown" />
                                <EventSetter Event="PreviewMouseMove" Handler="DataGrid_MouseMove" />
                            </Style>
                        </controls:DataGrid.Resources>-->
        </controls:DataGrid>
    </controls:DockPanel>
</UserControl>