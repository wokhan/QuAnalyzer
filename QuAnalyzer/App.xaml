<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:Converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:QuAnalyzer.UI.Controls"
             xmlns:BindingConverters="clr-namespace:QuAnalyzer.Helpers.BindingConverters"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             x:Class="QuAnalyzer.App"
             StartupUri="UI/Windows/ModernMain.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BindingConverters:BooleanNegator x:Key="booleanNegator" />
            <BindingConverters:ObjectToBool x:Key="objectToBool" />
            <!--<Style TargetType="Button" BasedOn="{StaticResource MetroButton}"></Style>
            <Style TargetType="CheckBox" BasedOn="{StaticResource MetroCheckBox}"></Style>
            <Style TargetType="GroupBox" BasedOn="{StaticResource MetroGroupBox}"></Style>
            <Style TargetType="ComboBox" BasedOn="{StaticResource MetroComboBox}"></Style>
            <Style TargetType="Expander" BasedOn="{StaticResource MetroExpander}"></Style>
            <Style TargetType="DataGrid" BasedOn="{StaticResource MetroDataGrid}"></Style>-->
            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
                <Setter Property="AlternatingRowBackground" Value="WhiteSmoke" />
                <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
                <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
            </Style>
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid x:Name="colHeader">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="#F5F5F5" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="True" />
                                                    <Condition Binding="{Binding CanUserSort,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridColumnHeader}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="TextElement.Foreground" Value="White" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"
                            Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0"
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                                <Thumb HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Width" Value="2" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="White"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="colHeader" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="colHeader" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonBar" TargetType="Border">
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="0,2,0,0" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Style.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MetroFlatButton}">
                        <Setter Property="Width" Value="75" />
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="FontSize" Value="11" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="{x:Type local:ToolBarButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.6" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ToolBarButton}">
                            <Border Margin="2" Padding="5" BorderThickness="{TemplateBinding BorderThickness}" ToolTip="{TemplateBinding ToolTip}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Background" Value="LightBlue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel Orientation="Horizontal">
                                    <Path Fill="{TemplateBinding BorderBrush}" Width="14" Height="14" Data="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" />
                                    <Label Foreground="Black" FontSize="11" Padding="5,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding Text}" />
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type local:ToolBarToggleButton}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.6" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:ToolBarToggleButton}">
                            <Border Margin="2" Padding="5" BorderThickness="{TemplateBinding BorderThickness}" ToolTip="{TemplateBinding ToolTip}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{Binding Background,RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="BorderBrush" Value="White" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <Setter Property="Background" Value="LightBlue" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel Orientation="Horizontal">
                                    <Path Fill="{TemplateBinding BorderBrush}" Width="16" Height="16" Data="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" />
                                    <Label FontSize="11" Padding="5,0,0,0" VerticalAlignment="Center" Content="{TemplateBinding Text}" />
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ToolBar" TargetType="WrapPanel">
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Style.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Width" Value="1" />
                        <Setter Property="Fill" Value="LightGray" />
                        <Setter Property="Margin" Value="4" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="ToolBar">
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Style.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Width" Value="2" />
                        <Setter Property="Fill" Value="LightGray" />
                        <Setter Property="Margin" Value="8" />
                    </Style>
                </Style.Resources>
            </Style>
            <Style x:Key="NoMarginGroupBox" TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                <Style.Resources>
                    <Converters:ToUpperConverter x:Key="ToUpperConverter" />
                </Style.Resources>
                <Setter Property="Padding" Value="0" />
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type GroupBox}},
                                              Path=Header,
                                              Mode=OneWay,
                                              Converter={StaticResource ToUpperConverter}}" Margin="5">
                                <TextElement.Foreground>
                                    <MultiBinding Converter="{x:Static Converters:BackgroundToForegroundConverter.Instance}">
                                        <Binding Mode="OneWay"
                                         Path="Background"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type GroupBox}}" />
                                        <Binding Mode="OneWay"
                                         Path="(Controls:GroupBoxHelper.HeaderForeground)"
                                         RelativeSource="{RelativeSource FindAncestor,
                                                                         AncestorType={x:Type GroupBox}}" />
                                    </MultiBinding>
                                </TextElement.Foreground>
                            </ContentPresenter>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CustomTab" TargetType="TabControl">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="1" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="0,1,0,0">
                                    <ContentPresenter ContentSource="SelectedContent"/>
                                </Border>
                                <TabPanel Margin="10,0,0,-1" Grid.Row="0" IsItemsHost="True" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Margin" Value="-1,0,0,0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1,1,1,0">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Background" Value="White" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TabItem}}" Value="True">
                                                        <Setter Property="Background" Value="WhiteSmoke" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Border BorderThickness="0,0,0,1">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TabItem}}" Value="True">
                                                            <Setter Property="BorderBrush" Value="WhiteSmoke" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Label VerticalContentAlignment="Center" Padding="6,0" FontSize="12" Content="{Binding Header, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TabItem}}" Height="26" Width="100" HorizontalContentAlignment="Center">
                                                <Label.Style>
                                                    <Style TargetType="Label">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TabItem}}" Value="True">
                                                                <Setter Property="FontWeight" Value="Bold" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Label.Style>
                                            </Label>
                                        </Border>
                                        <!--<Border Height="1" BorderBrush="{DynamicResource AccentColorBrush}">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Setter Property="BorderThickness" Value="1" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TabItem}}" Value="True">
                                                                <Setter Property="BorderThickness" Value="0" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                            </Border>-->
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="ToggleButton" x:Key="ToggleSwitch">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="Center">
                                <Border VerticalAlignment="Center" CornerRadius="10" Width="40" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid>
                                        <Ellipse Margin="2" Width="10" Height="10" Fill="{TemplateBinding Foreground}">
                                            <Ellipse.Style>
                                                <Style TargetType="Ellipse">
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="Opacity" Value="0.3" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked,RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True">
                                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                                            <Setter Property="Opacity" Value="1" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Ellipse.Style>
                                        </Ellipse>
                                    </Grid>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="Foreground" Value="Gray" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="Button" x:Key="MetroCircleButtonStyle" BasedOn="{x:Null}">
                <Setter Property="Width" Value="25" />
                <Setter Property="Height" Value="25" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border CornerRadius="20" BorderThickness="0" Cursor="Hand">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="Transparent" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ParametersBlockColor" Color="#CCBF4747" />
            <SolidColorBrush x:Key="SourceColorBrush" Color="#CC47BF47" />
            <SolidColorBrush x:Key="TargetColorBrush" Color="#CC4747BF" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="#FF41B1E1" />
            <System:Double x:Key="DialogTitleFontSize">14</System:Double>
            <System:Double x:Key="DialogMessageFontSize">12</System:Double>
        </ResourceDictionary>
    </Application.Resources>
</Application>
