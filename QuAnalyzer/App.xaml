<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:BindingConverters="clr-namespace:Wokhan.UI.BindingConverters;assembly=Wokhan.UI"
             xmlns:BindingConvertersEx="clr-namespace:QuAnalyzer.UI.BindingConverters"
             xmlns:System="clr-namespace:System;assembly=System.Runtime"
             xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:ext="clr-namespace:Wokhan.UI.Xaml.Extensibility;assembly=Wokhan.UI"
             x:Class="QuAnalyzer.App"
             StartupUri="UI/Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BindingConverters:BooleanNegateConverter x:Key="booleanNegator" />
            <BindingConverters:ObjectToBoolConverter x:Key="objectToBool" />
            <BindingConverters:ImageSourceConverter x:Key="imageSourceConverter" />
            <BindingConverters:ValueChecker x:Key="valueChecker" />
            <BindingConverters:ValueToVisibilityConverter x:Key="valueToVisibilityConverter" />
            <BindingConvertersEx:CollectionViewSourceCreator x:Key="collectionViewSourceCreator" />

            <SolidColorBrush x:Key="ParametersBlockColor" Color="#CCBF4747" />
            <SolidColorBrush x:Key="SourceColorBrush" Color="#CC47BF47" />
            <SolidColorBrush x:Key="TargetColorBrush" Color="#CC4747BF" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="#FF41B1E1" />
            <System:Double x:Key="DialogTitleFontSize">14</System:Double>
            <System:Double x:Key="DialogMessageFontSize">12</System:Double>

            <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
                <Setter Property="mahapps:HeaderedControlHelper.HeaderBackground" Value="WhiteSmoke" />
                <Setter Property="mahapps:HeaderedControlHelper.HeaderForeground" Value="DimGray" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>


            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="AlternatingRowBackground" Value="WhiteSmoke" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="MinRowHeight" Value="30" />
                <Style.Triggers>
                    <Trigger Property="SelectionUnit" Value="FullRow">
                        <Setter Property="RowHeaderWidth" Value="30" />
                        <Setter Property="RowHeaderStyle">
                            <Setter.Value>
                                <Style TargetType="DataGridRowHeader">
                                    <Style.Setters>
                                        <Setter Property="Background" Value="WhiteSmoke" />
                                        <!--<Setter Property="HorizontalContentAlignment" Value="Center" />-->
                                    </Style.Setters>
                                    <Style.Resources>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </Style.Resources>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="RowHeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <CheckBox Margin="5,2" IsChecked="{Binding IsSelected,Mode=TwoWay,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Using ColumnHeaderStyle on DataGrid prevents style overriding for some reason... Hence the direct declaration -->
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Background" Value="White" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                            <Grid x:Name="colHeader">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Background" Value="WhiteSmoke" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="True" />
                                                    <Condition Binding="{Binding CanUserSort,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridColumnHeader}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="TextElement.Foreground" Value="White" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                                <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill"
                            Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0"
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                                <Thumb HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1">
                                    <Thumb.Style>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="Width" Value="2" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="White"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Thumb.Style>
                                </Thumb>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SortDirection" Value="Ascending">
                                    <Setter TargetName="colHeader" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="SortArrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="SortDirection" Value="Descending">
                                    <Setter TargetName="colHeader" Property="Background" Value="LightGray"/>
                                    <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="BorderBrush" Value="Transparent" />
                <!--<Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>-->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style x:Key="ButtonBar" TargetType="Border">
                <Setter Property="Padding" Value="5" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <!--<Style.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                        <Setter Property="MinWidth" Value="90" />
                        <Setter Property="Margin" Value="10" />
                        <Setter Property="FontSize" Value="11" />
                    </Style>
                </Style.Resources>-->
            </Style>
            <Style x:Key="ToolBar" TargetType="WrapPanel">
                <!--<Setter Property="MinHeight" Value="32" />-->
                <!--<Setter Property="Background">
                    <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="White" />
                        <GradientStop Color="LightGray" Offset="1" />
                    </LinearGradientBrush>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Style.Resources>
                    <Style TargetType="Rectangle">
                        <Setter Property="Width" Value="1" />
                        <Setter Property="Fill" Value="LightGray" />
                        <Setter Property="Margin" Value="4" />
                    </Style>

                </Style.Resources>
            </Style>


            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.4" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightBlue" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="ext:CustomAdorner.CornerRadius" Value="3"/>
                <Setter Property="ext:CustomAdorner.ImageStyle">
                    <Setter.Value>
                        <Style TargetType="Control">
                            <Setter Property="Margin" Value="0,0,5,0" />
                            <Setter Property="Foreground" Value="{Binding BorderBrush,RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.6" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="BorderBrush" Value="White" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="LightBlue" />
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Margin" Value="5" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Padding" Value="10,5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="Background" Value="WhiteSmoke" />
                <Setter Property="ext:CustomAdorner.CornerRadius" Value="3"/>
                <Setter Property="ext:CustomAdorner.ImageStyle">
                    <Setter.Value>
                        <Style TargetType="Control">
                            <Setter Property="Margin" Value="0,0,5,0" />
                            <Setter Property="Foreground" Value="{Binding BorderBrush,RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="ToggleButton" x:Key="ToggleSwitch">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal" VerticalAlignment="Center">
                                <Border VerticalAlignment="Center" CornerRadius="10" Width="40" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid>
                                        <Ellipse Margin="2" Width="10" Height="10" Fill="{TemplateBinding Foreground}">
                                            <Ellipse.Style>
                                                <Style TargetType="Ellipse">
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="Opacity" Value="0.3" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsChecked,RelativeSource={x:Static RelativeSource.TemplatedParent}}" Value="True">
                                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                                            <Setter Property="Opacity" Value="1" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Ellipse.Style>
                                        </Ellipse>
                                    </Grid>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="BorderBrush" Value="LightGray" />
                        <Setter Property="Foreground" Value="Gray" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="{x:Type Separator}">
                <Setter Property="Height" Value="1" />
                <Setter Property="Margin" Value="0,2,0,2" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border BorderBrush="#FFB1703C" BorderThickness="10" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderThickness="1,3,1,0" CornerRadius="5,5,0,0">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="WhiteSmoke" />
                                                <Setter Property="BorderBrush" Value="Gray" />
                                                <Setter Property="Height" Value="31" />
                                            </Trigger>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={x:Static RelativeSource.TemplatedParent}}" Value="True">
                                                <Setter Property="Background" Value="WhiteSmoke" />
                                                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                                <Setter Property="Height" Value="32" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="SteelBlue" Margin="10,0" Height="19" Content="{Binding Image,RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                    <TextBlock Margin="0,0,10,0" Foreground="DarkSlateGray" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=Header,RelativeSource={x:Static RelativeSource.TemplatedParent}}" />
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
