<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="QuAnalyzer.UI.Windows.ModernMain"
    xmlns:UserControls="clr-namespace:QuAnalyzer.UI.Menus"
    xmlns:UC="clr-namespace:QuAnalyzer.UI.Controls" 
    Title="QuAnalyzer" ShowIconOnTitleBar="True" ShowTitleBar="True"
    ResizeMode="CanResizeWithGrip" TitleAlignment="Center"
    MinWidth="900" MinHeight="600" Height="600"
    
    Width="900" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True"
    BorderBrush="Gray" WindowTitleBrush="White" TitleForeground="Black">
    <Window.Resources>
        <Style TargetType="{x:Type Controls:WindowButtonCommands}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="flyAbout" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnAbout}" IsPinned="False" Header="About" Margin="0,31,0,0">
                <UserControls:About />
            </Controls:Flyout>
            <Controls:Flyout x:Name="flyExports" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnTasks}" IsPinned="False" Margin="0,31,0,0" Foreground="Black" Header="Tasks">
                <ScrollViewer Background="LightGray" HorizontalScrollBarVisibility="Hidden">
                    <StackPanel x:Name="stackExports" />
                </ScrollViewer>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid Name="mainGrid">
        <Controls:MetroAnimatedSingleRowTabControl Name="tabMenu" Margin="0,0,0,25" Padding="10">
            <TabControl.Resources>
                <Style TargetType="Frame">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentProject.CurrentProviders.Count, Source={x:Static Application.Current}}" Value="0">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Opacity" Value="0.3" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="UC:DecoratedTabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="UC:DecoratedTabItem">
                                <Border BorderThickness="0,0,0,2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="10,0" Height="19" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Data="{Binding Path=Image, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="Gray" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Width="{Binding ActualWidth, ElementName=btnMenu}" Visibility="Hidden" />
            <UC:DecoratedTabItem IsSelected="True" Header="DISPLAY" Image="{StaticResource appbar_list}">
                <Frame Margin="-10" Source="../Pages/Viewer.xaml" NavigationUIVisibility="Hidden"/>
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="DUPLICATES" Image="{StaticResource appbar_layer_delete}">
                <Frame Margin="-10" Source="../Pages/Duplicates.xaml" NavigationUIVisibility="Hidden"/>
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="COMPARISON" Image="{StaticResource appbar_arrow_left_right}">
                <Frame Margin="-10" Source="../Pages/Compare.xaml" NavigationUIVisibility="Hidden" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="PATTERNS" Image="{StaticResource appbar_draw_pixel_fill_grid}">
                <Frame Margin="-10" Source="../Pages/Patterns.xaml" NavigationUIVisibility="Hidden"/>
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="MONITORING" Image="{StaticResource appbar_image_redeye}">
                <Frame Margin="-10" Source="../Pages/Monitor.xaml" NavigationUIVisibility="Hidden"/>
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="STATISTICS" Image="{StaticResource appbar_graph_bar}">
                <Frame Margin="-10" Source="../Pages/Statistics.xaml" NavigationUIVisibility="Hidden"/>
            </UC:DecoratedTabItem>
        </Controls:MetroAnimatedSingleRowTabControl>
        <ToggleButton Name="btnMenu" IsChecked="True" HorizontalAlignment="Left" VerticalAlignment="Top" Height="32">
            <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="LightGray" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <Path Margin="10,0" Width="17" HorizontalAlignment="Left" VerticalAlignment="Center" Data="{StaticResource appbar_tiles_nine}" Stretch="Uniform">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnMenu}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btnMenu}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
                <TextBlock Margin="0,0,10,0" Text="PROJECT" />
            </StackPanel>
        </ToggleButton>
        <ToggleButton Name="btnTasks" IsChecked="False" BorderThickness="2,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32" Margin="0,0,40,0">
            <ToggleButton.Style>
                <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="LightGray" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Grid>
                <Path Width="32" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Data="{StaticResource appbar_list_gear}">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnTasks}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btnTasks}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
        </ToggleButton>
        <ToggleButton Name="btnAbout" IsChecked="False" BorderThickness="2,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32">
            <ToggleButton.Style>
                <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="LightGray" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Grid>
                <Path Width="32" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Data="{StaticResource appbar_information_circle}">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnAbout}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btnAbout}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
        </ToggleButton>
        <Grid HorizontalAlignment="Stretch" Margin="0,33,0,0" VerticalAlignment="Stretch">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentProject.CurrentProviders.Count, Source={x:Static Application.Current}}" Value="0">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <!--<Border Opacity="0.5" Background="LightGray" />-->
            <Label BorderBrush="Gray" BorderThickness="1" Padding="30" Background="LightYellow" HorizontalAlignment="Center" VerticalAlignment="Center">Please add a provider or load an existing project through the Project menu first.</Label>
        </Grid>
        <Border BorderBrush="{DynamicResource AccentColorBrush}" Margin="0,30,0,25" BorderThickness="0,2,0,0">
            <!--<Border.Effect>
                <DropShadowEffect Opacity="0.2"/>
            </Border.Effect>-->
            <Border.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Border.RenderTransform>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMenu}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked,ElementName=btnMenu}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-400" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-200" To="-600"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <UserControls:MainMenu Close="mainMenu_Close" />
        </Border>
        <StatusBar Height="25" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentProject.FilePath, Source={x:Static Application.Current},FallbackValue='No project has been loaded nor saved.'}" Background="Transparent" HorizontalAlignment="Right" Margin="0,0,20,0" />
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Width="90" Text="{Binding Performance.MemoryUseFormatted, Source={x:Static Application.Current}, StringFormat='Memory: {0}',FallbackValue='Memory: -KB'}" Margin="0,0,20,0" />
                    <TextBlock Width="60" Text="{Binding Performance.CPUUsage, Source={x:Static Application.Current}, StringFormat=CPU: {0}%,FallbackValue='CPU: -%'}" Margin="0,0,20,0" />
                    <TextBlock Width="70" Text="{Binding Performance.ThreadsCount, Source={x:Static Application.Current}, StringFormat=Threads: {0},FallbackValue='Threads: -'}" Margin="0,0,30,0" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>

</Controls:MetroWindow>
