<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="QuAnalyzer.UI.Windows.ModernMain"
    xmlns:QuAnalyzerHelpers="clr-namespace:QuAnalyzer.Core.Helpers"
    xmlns:UserControls="clr-namespace:QuAnalyzer.UI.Menus"
    xmlns:UC="clr-namespace:QuAnalyzer.UI.Controls" 
    Title="QuAnalyzer" ShowIconOnTitleBar="True" ShowTitleBar="True"
    ResizeMode="CanResizeWithGrip" TitleAlignment="Center"
    MinWidth="1000" MinHeight="600" Height="600"
    Width="900" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True"
    BorderBrush="Gray" WindowTitleBrush="White" TitleForeground="Black">
    <Window.Resources>
        <Style TargetType="{x:Type Controls:WindowButtonCommands}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>
    <Controls:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Grid>
            <StackPanel Background="LightGray" HorizontalAlignment="Left" Orientation="Horizontal">
                <Controls:DropDownButton Content="Open..." ItemsSource="{Binding Source={x:Static QuAnalyzerHelpers:MRUManager.RecentFiles}, Mode=OneWay}" x:Name="btnMenuOpen" Click="btnMenuOpen_Click">
                    <Controls:DropDownButton.Icon>
                        <Path Fill="#CCBF4747" Width="20" Margin="0,0,5,0" Data="{StaticResource appbar_folder_open}" Stretch="Uniform" />
                    </Controls:DropDownButton.Icon>
                </Controls:DropDownButton>
                <Controls:DropDownButton Content="Save" x:Name="btnMenuSave" Click="btnMenuSave_Click">
                    <Controls:DropDownButton.Icon>
                        <Path Fill="#CC4747BF" Height="16" Margin="0,0,5,0" Data="{StaticResource appbar_disk}" Stretch="Uniform" />
                    </Controls:DropDownButton.Icon>
                    <Controls:DropDownButton.Items>
                        <Button FontSize="12" Click="btnMenuSaveAs_Click">
                            <StackPanel Orientation="Horizontal">
                                <Path Data="{StaticResource appbar_disk_download}" Stretch="Uniform" Fill="Black" Height="16" />
                                <Label Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=Button}}" Content="Save as..."/>
                            </StackPanel>
                        </Button>
                    </Controls:DropDownButton.Items>
                </Controls:DropDownButton>
                <!--</StackPanel>-->
                <Button x:Name="btnMenuNew" Click="btnMenuNew_Click">
                    <StackPanel Orientation="Horizontal">
                        <Path Fill="#CC1DAE16" Height="16" Margin="0,0,5,0" Data="{StaticResource appbar_folder_star}" Stretch="Uniform" />
                        <TextBlock Text="New project" />
                    </StackPanel>
                </Button>
                <!--<Controls:Tile x:Name="btnMenuAbout" Click="btnMenuAbout_Click" Background="#CC1DAE16">
                <Grid>
                    <Path Fill="White" Width="32" Margin="0,-10,0,0" Data="{StaticResource appbar_information_circle}" Stretch="Uniform" />
                    <TextBlock Margin="0,0,0,-10" HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="About" />
                </Grid>
            </Controls:Tile>-->
            </StackPanel>
                <Grid HorizontalAlignment="Center">
                    <TextBox TextWrapping="Wrap" Background="White" Width="Auto" Foreground="Black" Text="{Binding CurrentProject.Name, Source={x:Static Application.Current}, FallbackValue='Unamed project'}" Margin="5" />
                </Grid>
            </Grid>
        </DataTemplate>
    </Controls:MetroWindow.TitleTemplate>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="flyAbout" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnAbout}" IsPinned="False" Header="About" Margin="0,31,0,0">
                <UserControls:About />
            </Controls:Flyout>
            <Controls:Flyout x:Name="flyExports" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnTasks}" IsPinned="False" Margin="0,31,0,0" Foreground="Black" Header="Tasks">
                <ScrollViewer Background="LightGray" HorizontalScrollBarVisibility="Hidden">
                    <StackPanel x:Name="stackExports" />
                </ScrollViewer>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid Name="mainGrid">
        <Controls:Flyout IsAutoCloseEnabled="False" Position="Left" IsOpen="True" Header="Sources" Margin="0,0,0,26" Foreground="Black" Background="WhiteSmoke" HorizontalAlignment="Left" Width="250">
            <UserControls:MainMenu x:Name="mainMenu" Close="mainMenu_Close" />
        </Controls:Flyout>
        <Controls:MetroAnimatedSingleRowTabControl Name="tabMenu" Margin="0,0,0,25" Padding="10">
            <TabControl.Resources>
                <Style TargetType="Frame">
                    <Setter Property="Margin" Value="{Binding ActualWidth,ElementName=mainMenu,Converter={StaticResource thicknessConverter},ConverterParameter='LEFT'}" />
                    <Setter Property="NavigationUIVisibility" Value="Hidden" />
                </Style>
                <Style TargetType="UC:DecoratedTabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="UC:DecoratedTabItem">
                                <Border BorderThickness="0,0,0,2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="10,0" Height="19" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Data="{Binding Path=Image, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="Gray" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem Width="{Binding ActualWidth, ElementName=mainMenu}" Visibility="Hidden" />
            <UC:DecoratedTabItem IsSelected="True" Header="DISPLAY" Image="{StaticResource appbar_list}">
                <Frame Source="../Pages/Viewer.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="DUPLICATES" Image="{StaticResource appbar_layer_delete}">
                <Frame Source="../Pages/Duplicates.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="PATTERNS" Image="{StaticResource appbar_draw_pixel_fill_grid}">
                <Frame Source="../Pages/Patterns.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="STATISTICS" Image="{StaticResource appbar_graph_bar}">
                <Frame Source="../Pages/Statistics.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="COMPARISON" Image="{StaticResource appbar_arrow_left_right}">
                <Frame Source="../Pages/Compare.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="MONITORING" Image="{StaticResource appbar_image_redeye}">
                <Frame Source="../Pages/Monitor.xaml" />
            </UC:DecoratedTabItem>
        </Controls:MetroAnimatedSingleRowTabControl>
        <ToggleButton Name="btnTasks" IsChecked="False" BorderThickness="2,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32" Margin="0,0,40,0">
            <ToggleButton.Style>
                <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="LightGray" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Grid>
                <Path Width="32" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Data="{StaticResource appbar_list_gear}">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnTasks}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btnTasks}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
        </ToggleButton>
        <ToggleButton Name="btnAbout" IsChecked="False" BorderThickness="2,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="32">
            <ToggleButton.Style>
                <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton">
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="LightGray" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
            <Grid>
                <Path Width="32" Height="19" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Data="{StaticResource appbar_information_circle}">
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="Fill" Value="Gray" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsChecked, ElementName=btnAbout}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=btnAbout}" Value="True">
                                    <Setter Property="Fill" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                </Path>
            </Grid>
        </ToggleButton>
        <!--<Border BorderBrush="{DynamicResource AccentColorBrush}" Margin="0,30,0,25" BorderThickness="0,2,0,0">
            --><!--<Border.Effect>
                <DropShadowEffect Opacity="0.2"/>
            </Border.Effect>--><!--
            <Border.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Border.RenderTransform>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMenu}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked,ElementName=btnMenu}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-400" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-200" To="-600"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <UserControls:MainMenu Close="mainMenu_Close" />
        </Border>-->
        <StatusBar Height="25" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentProject.FilePath, Source={x:Static Application.Current},FallbackValue='No project has been loaded nor saved.'}" Background="Transparent" HorizontalAlignment="Right" Margin="0,0,20,0" />
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Width="90" Text="{Binding Performance.MemoryUseFormatted, Source={x:Static Application.Current}, StringFormat='Memory: {0}',FallbackValue='Memory: -KB'}" Margin="0,0,20,0" />
                    <TextBlock Width="60" Text="{Binding Performance.CPUUsage, Source={x:Static Application.Current}, StringFormat=CPU: {0}%,FallbackValue='CPU: -%'}" Margin="0,0,20,0" />
                    <TextBlock Width="70" Text="{Binding Performance.ThreadsCount, Source={x:Static Application.Current}, StringFormat=Threads: {0},FallbackValue='Threads: -'}" Margin="0,0,30,0" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>

</Controls:MetroWindow>
