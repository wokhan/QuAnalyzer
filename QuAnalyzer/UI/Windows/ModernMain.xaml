<Controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    x:Class="QuAnalyzer.UI.Windows.ModernMain"
    xmlns:QuAnalyzerHelpers="clr-namespace:QuAnalyzer.Core.Helpers"
    xmlns:UserControls="clr-namespace:QuAnalyzer.UI.Menus"
    xmlns:UC="clr-namespace:QuAnalyzer.UI.Controls" 
    Title="QuAnalyzer" ShowIconOnTitleBar="True" TitleBarHeight="40" ShowTitleBar="True"
    ResizeMode="CanResizeWithGrip" TitleAlignment="Right"
    MinWidth="1030" MinHeight="600" Height="600"
    Width="900" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True"
    BorderBrush="Gray" WindowTitleBrush="LightGray" TitleForeground="Black">
    <Window.Resources>
        <Style TargetType="{x:Type Controls:WindowButtonCommands}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Controls:MetroWindow}}}" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo />
    </Window.TaskbarItemInfo>
    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Menu IsMainMenu="True" FontSize="14" Background="Transparent">
                    <Menu.BitmapEffect>
                        <DropShadowBitmapEffect ShadowDepth="5" Softness="0.8" />
                    </Menu.BitmapEffect>
                    <Menu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="_File">
                        <MenuItem Header="Open..." x:Name="btnMenuOpen" Click="btnMenuOpen_Click">
                            <MenuItem.Icon>
                                <Path Fill="#CCBF4747" Width="20" Data="{StaticResource appbar_folder_open}" Stretch="Uniform" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Recent" ItemsSource="{Binding Source={x:Static QuAnalyzerHelpers:MRUManager.RecentFiles}, Mode=OneWay}">
                            <MenuItem.Icon>
                                <Path Fill="#CCBF4747" Width="20" Data="{StaticResource appbar_folder_open}" Stretch="Uniform" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Save" x:Name="btnMenuSave" Click="btnMenuSave_Click">
                            <MenuItem.Icon>
                                <Path Fill="#CC4747BF" Height="16" Data="{StaticResource appbar_disk}" Stretch="Uniform" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Save as..." Click="btnMenuSaveAs_Click">
                            <MenuItem.Icon>
                                <Path Data="{StaticResource appbar_disk_download}" Stretch="Uniform" Fill="#CC4747BF" Height="16" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="New project" x:Name="btnMenuNew" Click="btnMenuNew_Click">
                            <MenuItem.Icon>
                                <Path Fill="#CC1DAE16" Height="16" Data="{StaticResource appbar_folder_star}" Stretch="Uniform" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Exit">
                            <MenuItem.Icon>
                                <Path Fill="OrangeRed" Height="16" Stretch="Uniform" Data="{StaticResource appbar_close}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Options">
                        <CheckBox Content="Allow multiple parallel comparisons" IsChecked="{Binding CurrentProject.UseParallelism, Source={x:Static Application.Current}, FallbackValue=True}"  />
                        <MenuItem Header="Project color">
                            <ListBox ItemsSource="{Binding AvailableColors, Source={x:Static Application.Current}}" SelectedItem="{Binding CurrentProject.AccentColor, Source={x:Static Application.Current}, FallbackValue=True}">
                                <ListBox.Resources>
                                    <Style TargetType="ListItem">
                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                    </Style>
                                </ListBox.Resources>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel MinHeight="32" Margin="5" IsItemsHost="True" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Controls:Tile IsHitTestVisible="False" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{Binding}" Margin="2" Height="28" Width="28" />
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Help">
                        <MenuItem Header="About" Name="btnAbout" IsChecked="False">
                            <MenuItem.Icon>
                                <Path Width="16" Stretch="Uniform" Data="{StaticResource appbar_information_circle}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <TextBox Grid.Column="1" FontSize="14" BorderThickness="0" VerticalContentAlignment="Center" Background="Transparent" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Foreground="Black" Text="{Binding CurrentProject.Name, Source={x:Static Application.Current}, FallbackValue='Unamed project'}" Margin="100,0,0,0">
                    <TextBox.FocusVisualStyle>
                        <Style TargetType="TextBox">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Style>
                    </TextBox.FocusVisualStyle>
                </TextBox>
            </Grid>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>
    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="flyAbout" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnAbout}" IsPinned="False" Header="About" Margin="0,31,0,0">
                <UserControls:About />
            </Controls:Flyout>
            <Controls:Flyout x:Name="flyExports" Position="Right" Width="350" Background="{DynamicResource AccentColorBrush}" CloseButtonVisibility="Collapsed" IsOpen="{Binding IsChecked, Mode=TwoWay, ElementName=btnTasks}" IsPinned="False" Margin="0,31,0,0" Foreground="Black" Header="Tasks">
                <ScrollViewer Background="LightGray" HorizontalScrollBarVisibility="Hidden">
                    <StackPanel x:Name="stackExports" />
                </ScrollViewer>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>
    <Grid Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Controls:Flyout TitleVisibility="Collapsed" CloseButtonVisibility="Collapsed" BorderBrush="{DynamicResource AccentColorBrush}" IsAutoCloseEnabled="False" Position="Left" IsOpen="True" Header="Sources" HorizontalAlignment="Left" Width="200" Background="Transparent">
            <UserControls:MainMenu x:Name="mainMenu" />
        </Controls:Flyout>
        <Controls:MetroAnimatedSingleRowTabControl Name="tabMenu" Margin="{Binding ActualWidth,ElementName=mainMenu,Converter={StaticResource thicknessConverter},ConverterParameter='LEFT'}">
            <TabControl.Resources>
                <Style TargetType="Frame">
                    <Setter Property="NavigationUIVisibility" Value="Hidden" />
                </Style>
                <Style TargetType="UC:DecoratedTabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="UC:DecoratedTabItem">
                                <Border BorderThickness="0,0,0,2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <StackPanel Orientation="Horizontal">
                                        <Path Margin="10,0" Height="19" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Data="{Binding Path=Image, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Fill" Value="Gray" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                        <TextBlock Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Path=Header, RelativeSource={RelativeSource TemplatedParent}}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentColorBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <UC:DecoratedTabItem IsSelected="True" Header="DISPLAY" Image="{StaticResource appbar_list}">
                <Frame Source="../Pages/Viewer.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="DUPLICATES" Image="{StaticResource appbar_layer_delete}">
                <Frame Source="../Pages/Duplicates.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="PATTERNS" Image="{StaticResource appbar_draw_pixel_fill_grid}">
                <Frame Source="../Pages/Patterns.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="STATISTICS" Image="{StaticResource appbar_graph_bar}">
                <Frame Source="../Pages/Statistics.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="COMPARISON" Image="{StaticResource appbar_arrow_left_right}">
                <Frame Source="../Pages/Compare.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="MONITORING" Image="{StaticResource appbar_image_redeye}">
                <Frame Source="../Pages/Monitor.xaml" />
            </UC:DecoratedTabItem>
            <UC:DecoratedTabItem Header="PERFORMANCE" Image="{StaticResource appbar_image_redeye}">
                <Frame Source="../Pages/Performance.xaml" />
            </UC:DecoratedTabItem>
        </Controls:MetroAnimatedSingleRowTabControl>
        
        
        <!--<Border BorderBrush="{DynamicResource AccentColorBrush}" Margin="0,30,0,25" BorderThickness="0,2,0,0">
            -->
        <!--<Border.Effect>
                <DropShadowEffect Opacity="0.2"/>
            </Border.Effect>-->
        <!--
            <Border.RenderTransform>
                <TranslateTransform X="0" Y="0" />
            </Border.RenderTransform>
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, ElementName=btnMenu}" Value="true">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsChecked,ElementName=btnMenu}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-400" Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseIn" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" From="-200" To="-600"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0"  Duration="0:0:0.5">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <UserControls:MainMenu Close="mainMenu_Close" />
        </Border>-->
        <StatusBar Grid.Row="1" Height="25" Background="{DynamicResource AccentColorBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
            <StatusBarItem>
                <TextBlock Text="{Binding CurrentProject.FilePath, Source={x:Static Application.Current},FallbackValue='No project has been loaded nor saved.'}" Background="Transparent" HorizontalAlignment="Right" Margin="0,0,20,0" />
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Right">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Width="90" Text="{Binding Performance.MemoryUseFormatted, Source={x:Static Application.Current}, StringFormat='Memory: {0}',FallbackValue='Memory: -KB'}" Margin="0,0,20,0" />
                    <TextBlock Width="60" Text="{Binding Performance.CPUUsage, Source={x:Static Application.Current}, StringFormat=CPU: {0}%,FallbackValue='CPU: -%'}" Margin="0,0,20,0" />
                    <TextBlock Width="70" Text="{Binding Performance.ThreadsCount, Source={x:Static Application.Current}, StringFormat=Threads: {0},FallbackValue='Threads: -'}" Margin="0,0,20,0" />
                    <ToggleButton Name="btnTasks" IsChecked="False" BorderThickness="0" Margin="0,0,30,0">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="ToggleButton">
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsChecked" Value="False" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="Background" Value="Transparent" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="LightGray" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="LightGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <StackPanel Orientation="Horizontal">
                            <Path Width="16" Margin="0,0,5,0" Fill="White" Stretch="Uniform" Data="{StaticResource appbar_list_gear}" />
                            <TextBlock Text="Tasks" VerticalAlignment="Center" />
                        </StackPanel>
                    </ToggleButton>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>

</Controls:MetroWindow>
