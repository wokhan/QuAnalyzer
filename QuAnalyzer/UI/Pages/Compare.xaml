<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:UC="clr-namespace:QuAnalyzer.UI.Controls"
      xmlns:ext="clr-namespace:Wokhan.UI.Xaml.Extensibility;assembly=Wokhan.UI"
      xmlns:local="clr-namespace:QuAnalyzer.UI.Pages"
      xmlns:quanalyzer="clr-namespace:QuAnalyzer"
      x:Class="QuAnalyzer.UI.Pages.Compare"
      x:Name="me"
      DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}}"
      mc:Ignorable="d"
      d:DesignWidth="800"
      d:DesignHeight="607.375"
      Title="DataCompare">
    <Page.Resources>
        <CollectionViewSource Source="{Binding ComparisonInstancesView}" x:Key="groupedViewSource">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Name" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <Style x:Key="RedWhenNotZero"  TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Foreground" Value="OrangeRed" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Content.Text,RelativeSource={x:Static RelativeSource.Self}}" Value="0">
                    <Setter Property="Foreground" Value="Black" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <local:SourceOrTargetPicker x:Key="SourceOrTargetPicker" />
    </Page.Resources>
    <Grid x:Name="gridMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="240" />
            <RowDefinition Height="4" />
            <RowDefinition MinHeight="100" />
        </Grid.RowDefinitions>
        <WrapPanel Grid.ColumnSpan="3" Style="{StaticResource ToolBar}">
            <Button HorizontalAlignment="Center" ToolTip="Start comparisons for the selected items" BorderBrush="Green" Command="{Binding RunCommand}" ext:CustomAdorner.Image="{iconPacks:Material Kind=Play,Width=10}" Content="Run" />
            <Rectangle />
            <ToggleButton x:Name="btnToggleMode" Content="Single-mapping mode" ToolTip="Single-mapping mode" BorderBrush="Blue" Foreground="Blue" ext:CustomAdorner.Image="{iconPacks:Material Kind=AbTesting}" IsChecked="False" />
            <Rectangle />
            <Button Content="Add" ToolTip="Add a mapping" BorderBrush="Green" ext:CustomAdorner.Image="{iconPacks:Material Kind=PlusCircleOutline}" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" Command="{Binding CreateMappingCommand}" />
            <Button Content="Automap" ToolTip="Automap" BorderBrush="Green" ext:CustomAdorner.Image="{iconPacks:Material Kind=ShuffleVariant}" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" Command="{Binding AutoMapCommand}" />
            <Rectangle />
            <Button Content="Sel. all" ToolTip="Select all" BorderBrush="Blue" ext:CustomAdorner.Image="{iconPacks:Material Kind=SelectAll}" Click="btnSelectAll_Click" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" />
            <Button Content="Unsel. all" ToolTip="Unselect all" BorderBrush="Blue" ext:CustomAdorner.Image="{iconPacks:Material Kind=Select}" Click="btnUnSel_Click" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" />
        </WrapPanel>
        <TabControl Grid.Row="1" VerticalAlignment="Stretch" BorderThickness="0" HorizontalAlignment="Stretch" Padding="0">
            <TabControl.Style>
                <Style TargetType="TabControl">
                    <Style.Resources>
                        <Style TargetType="TabPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <Style TargetType="TabItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </Style.Resources>
                </Style>
            </TabControl.Style>
            <TabItem x:Name="tabMapping" IsSelected="{Binding IsChecked,ElementName=btnToggleMode, Converter={StaticResource booleanNegator}}">
                <DataGrid SelectionMode="Extended" ItemsSource="{Binding CurrentProject.SourceMapper, Source={x:Static quanalyzer:App.Instance}}" ColumnWidth="18*" AutoGenerateColumns="False" x:Name="lstMappings" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Mapping name" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding SourceName}" Header="Source" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding SourceRepository}" Header="Source repository" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TargetName}" Header="Target" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TargetRepository}" Header="Target repository" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Stream" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ToggleButton Style="{StaticResource ToggleSwitch}" Padding="5,0" Foreground="Black" IsChecked="{Binding IsOrdered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn IsReadOnly="True" CanUserResize="False" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <Button Command="{Binding EditMappingCommand,RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" Foreground="Blue" Content="{iconPacks:Material Kind=Pencil}" />
                                        <Button Command="{Binding DeleteMappingCommand,RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" Foreground="OrangeRed" Content="{iconPacks:Material Kind=DeleteOutline}" />
                                    </WrapPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem IsSelected="{Binding IsChecked, ElementName=btnToggleMode}">
                <UC:MappingsEdit Mapping="{Binding}" DataContext="{Binding SingleMap,ElementName=me}" />
            </TabItem>
        </TabControl>
        <GridSplitter Grid.Row="2" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch" />
        <DockPanel Grid.Column="0" Grid.Row="3">
            <WrapPanel Style="{StaticResource ToolBar}">
                <TextBlock Text="Global progress" Padding="4" Height="26" />
                <ProgressBar x:Name="prgGlobal" Maximum="100" Height="22" Width="292" />
                <Rectangle />
                <Button Content="Create report" ToolTip="Create report" BorderBrush="BlueViolet" ext:CustomAdorner.Image="{iconPacks:Material Kind=Export}" Command="{Binding GlobalReportCommand}" />
            </WrapPanel>
            <UC:ExtendedDataGridView ItemsSource="{Binding Source={StaticResource groupedViewSource}}" ColumnWidth="*" CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False" x:Name="allProgress" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" GridLinesVisibility="None" SelectionUnit="Cell">
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel>
                                                <!--<DataGridCell BorderThickness="0" Margin="0" Padding="0">-->
                                                <Grid Height="55" DataContext="{Binding Items[0]}" Background="#FFEEEEEE" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock FontWeight="Bold" Text="{Binding Name, Mode=OneWay, FallbackValue='Mapping title'}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,10,0,0" />
                                                    <TextBlock Text="{Binding Results.TotalTime, FallbackValue='Ellapsed time: -ms', Mode=OneWay, StringFormat='Ellapsed time: {0}ms'}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5,0,0,10"/>
                                                    <!-- Progress and cancel button -->
                                                    <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                                        <StackPanel.Style>
                                                            <Style TargetType="StackPanel">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Results.LocalProgress}" Value="100">
                                                                        <Setter Property="Visibility" Value="Hidden" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Results.Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Hidden" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </StackPanel.Style>
                                                        <Grid>
                                                            <ProgressBar BorderThickness="1" Value="{Binding Results.LocalProgress, Mode=OneWay, FallbackValue=0}" Maximum="100" Height="20" Width="150" Margin="10,0" />
                                                            <TextBlock Foreground="White" Text="{Binding Results.Progress, Mode=OneWay, FallbackValue='Current step'}" TextAlignment="Center" VerticalAlignment="Center" />
                                                        </Grid>
                                                        <Button Height="40" Command="{Binding CancelCommand,RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" Width="40" Foreground="OrangeRed" Content="{iconPacks:Material Kind=StopCircleOutline}">
                                                            <Button.Style>
                                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="False" >
                                                                            <Setter Property="Opacity" Value="0.5" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </StackPanel>
                                                    <!--Results-->
                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                                        <StackPanel.Style>
                                                            <Style TargetType="StackPanel">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                                <Style.Triggers>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding Results.LocalProgress}" Value="100" />
                                                                            <Condition Binding="{Binding Results.Message,Converter={StaticResource objectToBool}}" Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </MultiDataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </StackPanel.Style>
                                                        <TextBlock FontWeight="Bold" Text="{Binding Results.MatchingCount, FallbackValue='Matches: -', Mode=OneWay, StringFormat=Matches: \{0\}}" Padding="5" VerticalAlignment="Center" />
                                                        <Button Height="40" Command="{Binding DetailsCommand,RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" Width="40" Content="{iconPacks:Material Kind=Eye}" Foreground="Green" />
                                                    </StackPanel>
                                                    <!--Error-->
                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                                        <StackPanel.Style>
                                                            <Style TargetType="StackPanel">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Results.Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="True" >
                                                                        <Setter Property="Visibility" Value="Visible" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </StackPanel.Style>
                                                        <ContentControl Background="Yellow" BorderBrush="Red" ToolTip="{Binding Results.Message}" Height="40" Width="40" Margin="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" Content="{iconPacks:Material Kind=Alert}">
                                                            <ContentControl.Resources>
                                                                <Storyboard x:Key="sbBlink" AutoReverse="True" BeginTime="00:00:02" RepeatBehavior="Forever" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                                                    <ColorAnimation From="Transparent" To="Red" Duration="0:0:2"/>
                                                                </Storyboard>
                                                            </ContentControl.Resources>
                                                            <!--<ContentControl.Style>
                                                                <Style TargetType="ContentControl">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="Visibility" Value="Visible">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard Storyboard="{StaticResource sbBlink}" x:Name="AnimationBeginStoryboard" />
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <RemoveStoryboard BeginStoryboardName="AnimationBeginStoryboard"/>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ContentControl.Style>-->
                                                        </ContentControl>
                                                    </StackPanel>
                                                    <Button Grid.Column="2" Height="40" Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=Page}}" CommandParameter="{Binding}" Width="40" Foreground="OrangeRed" Content="{iconPacks:Material Kind=DeleteOutline}">
                                                        <Button.Style>
                                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                <Setter Property="IsEnabled" Value="False" />
                                                                <Setter Property="Opacity" Value="0.5" />
                                                                <Style.Triggers>
                                                                    <!--<DataTrigger Binding="{Binding IsEnabled, ElementName=btnCancel}" Value="False" >
                                                                        <Setter Property="IsEnabled" Value="True" />
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </DataTrigger>-->
                                                                    <DataTrigger Binding="{Binding Results.LocalProgress}" Value="100">
                                                                        <Setter Property="IsEnabled" Value="True" />
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Results.Message, Converter={StaticResource objectToBool}}" Value="True" >
                                                                        <Setter Property="IsEnabled" Value="True" />
                                                                        <Setter Property="Opacity" Value="1" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                                <!--</DataGridCell>-->
                                                <ItemsPresenter />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="0" MinWidth="0" Header="Name" Binding="{Binding Name}" />
                    <DataGridTextColumn Header="Item" Width="Auto" MinWidth="110" FontWeight="Bold">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="SourceName" />
                                <Binding Path="TargetName" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Start time">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.StartTime" />
                                <Binding Path="Results.Target.StartTime" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Loading time">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.LoadingTime" />
                                <Binding Path="Results.Target.LoadingTime" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Count">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Count" />
                                <Binding Path="Results.Target.Count" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Width="0" MinWidth="0" Header="Matches" Binding="{Binding Results.MatchingCount, FallbackValue=0}" />
                    <DataGridTextColumn Header="Missing" CellStyle="{StaticResource RedWhenNotZero}">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Missing.Count" />
                                <Binding Path="Results.Target.Missing.Count" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Differences" Binding="{Binding Results.Source.Differences.Count}" CellStyle="{StaticResource RedWhenNotZero}" />
                    <DataGridTextColumn Header="Look-alikes" CellStyle="{StaticResource RedWhenNotZero}">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.Duplicates.Count" />
                                <Binding Path="Results.Target.Duplicates.Count" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Duplicates" CellStyle="{StaticResource RedWhenNotZero}">
                        <DataGridBoundColumn.Binding>
                            <MultiBinding Converter="{StaticResource SourceOrTargetPicker}">
                                <Binding RelativeSource="{RelativeSource AncestorType=DataGridRow}" BindsDirectlyToSource="True" Path="AlternationIndex" />
                                <Binding Path="Results.Source.PerfectDups.Count" />
                                <Binding Path="Results.Target.PerfectDups.Count" />
                            </MultiBinding>
                        </DataGridBoundColumn.Binding>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </UC:ExtendedDataGridView>
        </DockPanel>
    </Grid>
</Page>
