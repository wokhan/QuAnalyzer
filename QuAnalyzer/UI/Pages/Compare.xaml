<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:UC="clr-namespace:QuAnalyzer.UI.Controls"
      x:Class="QuAnalyzer.UI.Pages.Compare" 
      x:Name="me"
      mc:Ignorable="d"
      d:DesignWidth="800"
	Title="DataCompare" d:DesignHeight="607.375">
    <Grid x:Name="gridMain">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" MinHeight="100"/>
            <RowDefinition Height="4" />
            <RowDefinition MinHeight="100"/>
        </Grid.RowDefinitions>
        <WrapPanel Grid.ColumnSpan="3" Style="{StaticResource ToolBar}">
            <UC:ToolBarButton HorizontalAlignment="Center" ToolTip="Start comparisons for the selected items" BorderBrush="Green" Click="btnRun_Click" Image="{iconPacks:Material Kind=Play,Width=10}" Text="Run" />
            <Rectangle />
            <UC:ToolBarToggleButton x:Name="btnToggleMode" Text="Single-mapping mode" ToolTip="Single-mapping mode" BorderBrush="Blue" Foreground="Blue" Image="{iconPacks:Material Kind=AbTesting}" IsChecked="False" />
            <Rectangle />
            <UC:ToolBarButton Text="Add" ToolTip="Add a mapping" BorderBrush="Green" Image="{iconPacks:Material Kind=PlusCircleOutline}" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" Click="btnNewPrv_Click" />
            <UC:ToolBarButton Text="Automap" ToolTip="Automap" BorderBrush="Green" Image="{iconPacks:Material Kind=ShuffleVariant}" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" Click="btnAuto_Click" />
            <Rectangle />
            <UC:ToolBarButton Text="Sel. all" ToolTip="Select all" BorderBrush="Blue" Image="{iconPacks:Material Kind=SelectAll}" Click="btnSelectAll_Click" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" />
            <UC:ToolBarButton Text="Unsel. all" ToolTip="Unselect all" BorderBrush="Blue" Image="{iconPacks:Material Kind=Select}" Click="btnUnSel_Click" IsEnabled="{Binding IsChecked, ElementName=btnToggleMode,Converter={StaticResource booleanNegator}}" />
        </WrapPanel>
        <TabControl Grid.Row="1" VerticalAlignment="Stretch" BorderThickness="0" HorizontalAlignment="Stretch" Padding="0">
            <TabControl.Style>
                <Style TargetType="TabControl">
                    <Style.Resources>
                        <Style TargetType="TabPanel">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                        <Style TargetType="TabItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </Style.Resources>
                </Style>
            </TabControl.Style>
            <TabItem x:Name="tabMapping" IsSelected="{Binding IsChecked,ElementName=btnToggleMode, Converter={StaticResource booleanNegator}}">
                <DataGrid SelectionMode="Extended" ItemsSource="{Binding CurrentProject.SourceMapper, Source={x:Static Application.Current}}" HeadersVisibility="All" RowHeaderWidth="30" ColumnWidth="18*" AutoGenerateColumns="False" x:Name="lstMappings" CanUserAddRows="False">
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="DataGridRowHeader">
                            <Style.Setters>
                                <Setter Property="Background" Value="WhiteSmoke" />
                                <Setter Property="BorderThickness" Value="0,0,2,0" />
                                <Setter Property="BorderBrush" Value="LightGray" />
                                <Setter Property="HorizontalContentAlignment" Value="Right" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                            </Style.Setters>
                            <Style.Resources>
                                <Style TargetType="StackPanel">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </Style.Resources>
                        </Style>
                    </DataGrid.RowHeaderStyle>
                    <DataGrid.RowHeaderTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected,Mode=TwoWay,RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}}" />
                        </DataTemplate>
                    </DataGrid.RowHeaderTemplate>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" Header="Mapping name" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding SourceName}" Header="Source" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding SourceRepository}" Header="Source repository" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TargetName}" Header="Target" IsReadOnly="True" />
                        <DataGridTextColumn Binding="{Binding TargetRepository}" Header="Target repository" IsReadOnly="True" />
                        <DataGridTemplateColumn Header="Stream" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ToggleButton Style="{StaticResource ToggleSwitch}" Padding="5,0" Foreground="Black" IsChecked="{Binding IsOrdered, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Width="70" IsReadOnly="True" CanUserResize="False">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <Button Name="btnEditMapping" Tag="{Binding}" Click="btnEditMapping_Click" Foreground="Blue" Content="{iconPacks:Material Kind=Pencil}" />
                                        <Button Name="btnDeleteMapping" Tag="{Binding}" Click="btnDeleteMapping_Click" Foreground="OrangeRed" Content="{iconPacks:Material Kind=DeleteOutline}" />
                                    </WrapPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem IsSelected="{Binding IsChecked, ElementName=btnToggleMode}">
                <UC:MappingsEdit Mapping="{Binding}" DataContext="{Binding SingleMap,ElementName=me}" />
            </TabItem>
        </TabControl>
        <GridSplitter Grid.Row="2" Background="{DynamicResource AccentColorBrush}" HorizontalAlignment="Stretch" />
        <DockPanel Grid.Column="0" Grid.Row="3">
            <WrapPanel Style="{StaticResource ToolBar}">
                <TextBlock Text="Global progress" Padding="4" Height="26" />
                <ProgressBar x:Name="prgGlobal" Maximum="100" Height="22" Width="292"/>
                <Rectangle />
                <UC:ToolBarButton Text="Copy" ToolTip="Copy to clipboard" BorderBrush="#FFFD00FD" Image="{iconPacks:Material Kind=ContentCopy}" Click="GlobalCopy_Click" />
                <Rectangle />
                <UC:ToolBarButton Text="Excel" ToolTip="Export to CSV" BorderBrush="Green" Image="{iconPacks:Material Kind=FileExcelBoxOutline}" Click="GlobalExportCSV_Click" />
                <UC:ToolBarButton Text="HTML" ToolTip="Export to HTML" BorderBrush="Blue" Image="{iconPacks:Material Kind=Xml}" Click="GlobalExportHTML_Click" />
                <Rectangle />
                <UC:ToolBarButton Text="Create report" ToolTip="Create report" BorderBrush="BlueViolet" Image="{iconPacks:Material Kind=Export}" Click="GlobalReport_Click" />
            </WrapPanel>
            <DataGrid ColumnWidth="*" CanUserAddRows="False" BorderThickness="0" IsReadOnly="True" AutoGenerateColumns="False" Name="allProgress" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" GridLinesVisibility="Vertical" SelectionUnit="Cell">
                <DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel>
                                                <DataGridCell BorderThickness="0" Grid.ColumnSpan="9" Margin="0" Background="#FFEEEEEE" Padding="0">
                                                    <Grid DataContext="{Binding Items[0]}" Height="Auto">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock FontWeight="Bold" Text="{Binding [0], Mode=OneWay, FallbackValue='Mapping title'}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,3,0,0" />
                                                        <TextBlock Text="{Binding [2].TotalTime, FallbackValue='Total time: -ms', Mode=OneWay, StringFormat='Total time: {0}ms'}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5,0,0,3"/>
                                                        <!-- Progress and cancel button -->
                                                        <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Right">
                                                            <StackPanel.Style>
                                                                <Style TargetType="StackPanel">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Value, ElementName=prg}" Value="100">
                                                                            <Setter Property="Visibility" Value="Hidden" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding [2].Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="True" >
                                                                            <Setter Property="Visibility" Value="Hidden" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </StackPanel.Style>
                                                            <Grid>
                                                                <ProgressBar Name="prg" BorderThickness="1" Value="{Binding [2].LocalProgress, Mode=OneWay, FallbackValue=0}" Maximum="100" Height="20" Width="150" Margin="10,0" />
                                                                <TextBlock Foreground="White" Text="{Binding [2].Progress, Mode=OneWay, FallbackValue='Current step'}" TextAlignment="Center" VerticalAlignment="Center" />
                                                            </Grid>
                                                            <Button Name="btnCancel" Tag="{Binding [4]}" Height="40" Click="btnCancel_Click" Width="40" Foreground="OrangeRed" Content="{iconPacks:Material Kind=StopCircleOutline}">
                                                                <Button.Style>
                                                                    <Style TargetType="Button">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsEnabled, ElementName=btnCancel}" Value="False" >
                                                                                <Setter Property="Opacity" Value="0.5" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Button.Style>
                                                            </Button>
                                                        </StackPanel>
                                                        <!--Results-->
                                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <StackPanel.Style>
                                                                <Style TargetType="StackPanel">
                                                                    <Setter Property="Visibility" Value="Hidden" />
                                                                    <Style.Triggers>
                                                                        <MultiDataTrigger>
                                                                            <MultiDataTrigger.Conditions>
                                                                                <Condition Binding="{Binding Value, Mode=OneWay,ElementName=prg}" Value="100" />
                                                                                <Condition Binding="{Binding [2].Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="False" />
                                                                            </MultiDataTrigger.Conditions>
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </MultiDataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </StackPanel.Style>
                                                            <TextBlock FontWeight="Bold" Text="{Binding [2].MatchingCount, FallbackValue='Matches: -', Mode=OneWay, StringFormat=Matches: \{0\}}" Padding="5" VerticalAlignment="Center" />
                                                            <Button Name="btnDetails" Tag="{Binding [4]}" Height="40" Click="btnDetails_Click" Width="40" Content="{iconPacks:Material Kind=Eye}" Foreground="Green" />
                                                        </StackPanel>
                                                        <!--Error-->
                                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                                            <StackPanel.Style>
                                                                <Style TargetType="StackPanel">
                                                                    <Setter Property="Visibility" Value="Hidden" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding [2].Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="True" >
                                                                            <Setter Property="Visibility" Value="Visible" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </StackPanel.Style>
                                                            <Button Name="btnError" Background="Yellow" BorderBrush="Red" Tag="{Binding [2].Message}" Height="40" Click="btnError_Click" Width="40">
                                                                <ContentControl Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Red" Content="{iconPacks:Material Kind=Alert}">
                                                                    <ContentControl.Resources>
                                                                        <Storyboard x:Key="sbBlink" AutoReverse="True" BeginTime="00:00:02" RepeatBehavior="Forever" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                                                            <ColorAnimation From="Transparent" To="Red" Duration="0:0:2"/>
                                                                        </Storyboard>
                                                                    </ContentControl.Resources>
                                                                    <ContentControl.Style>
                                                                        <Style TargetType="ContentControl">
                                                                            <Style.Triggers>
                                                                                <Trigger Property="Visibility" Value="Visible">
                                                                                    <Trigger.EnterActions>
                                                                                        <BeginStoryboard Storyboard="{StaticResource sbBlink}" x:Name="AnimationBeginStoryboard"/>
                                                                                    </Trigger.EnterActions>
                                                                                    <Trigger.ExitActions>
                                                                                        <RemoveStoryboard BeginStoryboardName="AnimationBeginStoryboard"/>
                                                                                    </Trigger.ExitActions>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </ContentControl.Style>
                                                                </ContentControl>
                                                            </Button>
                                                        </StackPanel>
                                                        <Button Grid.Column="2" Name="btnDelete" Tag="{Binding [4]}" Height="40" Click="btnDelete_Click" Width="40" Foreground="OrangeRed" Content="{iconPacks:Material Kind=DeleteOutline}">
                                                            <Button.Style>
                                                                <Style TargetType="Button">
                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsEnabled, ElementName=btnCancel}" Value="False" >
                                                                            <Setter Property="IsEnabled" Value="True" />
                                                                            <Setter Property="Opacity" Value="1" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding Value, ElementName=prg}" Value="100">
                                                                            <Setter Property="IsEnabled" Value="True" />
                                                                            <Setter Property="Opacity" Value="1" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding [2].Message, Mode=OneWay, Converter={StaticResource objectToBool}}" Value="True" >
                                                                            <Setter Property="IsEnabled" Value="True" />
                                                                            <Setter Property="Opacity" Value="1" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                </DataGridCell>
                                                <ItemsPresenter />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Width="0" MinWidth="0" Header="Name" Binding="{Binding [0]}" />
                    <DataGridTextColumn Header="Item" Width="Auto" MinWidth="110" Binding="{Binding [1]}" FontWeight="Bold" />
                    <DataGridTextColumn Header="Start time" Binding="{Binding [3].StartTime}" />
                    <DataGridTextColumn Header="Loading time" Binding="{Binding [3].LoadingTime}" />
                    <DataGridTextColumn Header="Count" Binding="{Binding [3].Count}" />
                    <DataGridTextColumn Width="0" MinWidth="0" Header="Matches" Binding="{Binding [2].MatchingCount, FallbackValue=0}" />
                    <DataGridTextColumn Header="Missing" Binding="{Binding [3].Missing.Count, FallbackValue=0}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding [3].Missing.Count, FallbackValue=0}" Value="0">
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Differences" Binding="{Binding [3].Differences.Count, FallbackValue=0}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding [3].Differences.Count, FallbackValue=0}" Value="0">
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Look-alikes" Binding="{Binding [3].Duplicates.Count, FallbackValue=0}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding [3].Duplicates.Count, FallbackValue=0}" Value="0">
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Duplicates" Binding="{Binding [3].PerfectDups.Count, FallbackValue=0}">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Background" Value="OrangeRed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding [3].PerfectDups.Count, FallbackValue=0}" Value="0">
                                        <Setter Property="Background" Value="Transparent" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>
    </Grid>
</Page>
