<Page x:Class="QuAnalyzer.UI.Pages.Monitor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:ext="clr-namespace:Wokhan.UI.Xaml.Extensibility;assembly=Wokhan.UI"
      xmlns:charts="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
      xmlns:monitor="clr-namespace:QuAnalyzer.Features.Monitoring"
      xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
      mc:Ignorable="d"
      d:DesignHeight="700" d:DesignWidth="800"
      DataContext="{Binding RelativeSource={RelativeSource Self}}"
      x:Name="me"
	Title="DataMonitor">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="170" Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="150" Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition MinHeight="150" Height="*" />
        </Grid.RowDefinitions>
        <WrapPanel Grid.ColumnSpan="3" Style="{StaticResource ToolBar}">
            <Button x:Name="btnStart" Content="Run" ToolTip="Start monitoring the selected items" IsEnabled="{Binding Items.IsEmpty,ElementName=gridSteps,Converter={StaticResource booleanNegator}}"  BorderBrush="Green" ext:CustomAdorner.Image="{iconPacks:Material Kind=Play,Width=10}" Click="btnStart_Click" />
            <!--<Button Content="Run all" ToolTip="Start monitoring all items" IsEnabled="{Binding Items.IsEmpty,ElementName=gridSteps,Converter={StaticResource booleanNegator}}" BorderBrush="Green" ext:CustomAdorner.Image="{StaticResource appbar_control_play}" Click="btnStartAll_Click" />-->
            <Button x:Name="btnStop" IsEnabled="False" Content="Stop" ToolTip="Stop monitoring" BorderBrush="Red" ext:CustomAdorner.Image="{iconPacks:Material Kind=Stop,Width=10}" Click="btnStopAll_Click" />
            <Rectangle />
            <Button Content="Add" ToolTip="Add a step" BorderBrush="Green" ext:CustomAdorner.Image="{iconPacks:Material Kind=PlusCircleOutline}" Click="btnAdd_Click" />
            <Button Content="Clear" ToolTip="Remove all" BorderBrush="OrangeRed" ext:CustomAdorner.Image="{iconPacks:Material Kind=DeleteOutline}" IsEnabled="{Binding Items.IsEmpty,ElementName=gridSteps,Converter={StaticResource booleanNegator}}" Click="btnClear_Click" />
            <ToggleButton Content="Comparison mode" x:Name="btnCompareMode" BorderBrush="Violet" ext:CustomAdorner.Image="{iconPacks:Material Kind=Shuffle}" IsEnabled="{Binding Items.IsEmpty,ElementName=gridSteps,Converter={StaticResource booleanNegator}}" />
            <Rectangle />
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Occurences: " VerticalAlignment="Center" />
                <mah:NumericUpDown HideUpDownButtons="True" Width="40" VerticalContentAlignment="Center" Minimum="1" Value="{Binding Occurences,Mode=TwoWay}" Padding="0" Margin="2" VerticalAlignment="Center" />
            </StackPanel>
            <Rectangle />
            <StackPanel Margin="10,0,0,0" Orientation="Horizontal">
                <TextBlock Text="Parallelism: " VerticalAlignment="Center" />
                <mah:NumericUpDown HideUpDownButtons="True" Width="40" VerticalContentAlignment="Center" Minimum="1" Value="{Binding MaxParallel,Mode=TwoWay}" VerticalAlignment="Center" Padding="0" Margin="2" />
            </StackPanel>
            <!--<Rectangle />
            <ToggleButton Content="Enable chart" ToolTip="Enable charting" IsChecked="True" BorderBrush="Green" ext:CustomAdorner.Image="{StaticResource appbar_draw_pixel_fill_grid}" x:Name="btnEnable" />-->
        </WrapPanel>
        <DataGrid Grid.Row="1" SelectionMode="Extended" VirtualizingPanel.ScrollUnit="Pixel" ItemsSource="{Binding CurrentProject.MonitorItems, Source={x:Static Application.Current}}" x:Name="gridSteps" AutoGenerateColumns="False" ColumnWidth="18*" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                <DataGridComboBoxColumn Header="Provider" x:Name="lstDataProviders" MinWidth="150" ItemsSource="{Binding CurrentProject.CurrentProviders,Source={x:Static Application.Current}}" DisplayMemberPath="Name" SelectedValueBinding="{Binding Provider}" />
                <DataGridComboBoxColumn Header="Repository" MinWidth="150" ItemsSource="{Binding Provider.Repositories.Keys}" />
                <DataGridComboBoxColumn Header="Type" SelectedValueBinding="{Binding Type}" SelectedValuePath="Key" DisplayMemberPath="Value" ItemsSource="{Binding Source={x:Static monitor:MonitoringModes.MonitoringTypes}}" />
                <DataGridTextColumn Header="Interval" Binding="{Binding Interval}" />
                <DataGridCheckBoxColumn Header="Run when started" Binding="{Binding RunWhenStarted}" />
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="100" />
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <WrapPanel>
                                <Button Name="btnEditMapping" Tag="{Binding}" Click="btnEdit_Click" Foreground="Blue" Content="{iconPacks:Material Kind=Pencil}" />
                                <Button Name="btnDelete" Click="btnDelete_Click" Tag="{Binding}" Foreground="OrangeRed" Content="{iconPacks:Material Kind=DeleteOutline}" />
                            </WrapPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <!--<DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="Attributes:" />
                            <ListBox Grid.Row="2" x:Name="lstAttributes" SelectionMode="Multiple">
                                <ListBox.Resources>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="IsSelected" Value="{Binding Value, Mode=OneWay}" />
                                    </Style>
                                </ListBox.Resources>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <CheckBox IsChecked="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" />
                                            <Label Content="{Binding Key}" Grid.Column="1" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <StackPanel Grid.Row="3" Orientation="Horizontal">
                                <Label Content="Filter:" />
                                <TextBox x:Name="txtFilter" Text="{Binding Filter}" />
                            </StackPanel>
                            <Label Grid.Column="1" Content="Preceding steps:" />
                            -->
            <!--<DataGrid Grid.Row="2" Grid.Column="1" x:Name="lstPrec" Height="70" ItemsSource="{Binding CurrentProject.MonitorItems, Source={x:Static Application.Current}}">
                                <DataGridCheckBoxColumn Header="Select" Binding="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                                <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleButton Style="{StaticResource ToggleSwitch}" IsChecked="{Binding UseData}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid>-->
            <!--
                        </Grid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>-->
        </DataGrid>
        <GridSplitter Grid.Row="2" Height="2" Background="LightGray" />
        <DockPanel Grid.Row="3">
            <WrapPanel Grid.Column="7" Style="{StaticResource ToolBar}">
                <Button x:Name="btnGrCopy" Content="Copy" ToolTip="Copy to clipboard" BorderBrush="Magenta" ext:CustomAdorner.Image="{iconPacks:Material Kind=ContentCopy}" Click="btnGrCopy_Click" />
                <Rectangle />
                <Button x:Name="btnGrCSV" Content="Excel" ToolTip="Export to CSV" BorderBrush="Green" ext:CustomAdorner.Image="{iconPacks:Material Kind=FileExcelOutline}" Click="btnGrCSV_Click" />
                <Button x:Name="btnGrHTML" Content="HTML" ToolTip="Export to HTML" BorderBrush="Blue" ext:CustomAdorner.Image="{iconPacks:Material Kind=Xml}" Click="btnGrHTML_Click" />
            </WrapPanel>
            <!--<CheckBox Content="Group by step name" Name="chkGroup" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-25" Checked="chkGroup_Checked" IsChecked="True" />-->
            <DataGrid x:Name="gridResults" ItemsSource="{Binding MonitorResultsView}" VirtualizingPanel.ScrollUnit="Pixel" IsReadOnly="True" AutoGenerateColumns="False">
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid Margin="10,0,0,0" BorderThickness="1,0,0,0" BorderBrush="{DynamicResource AccentColorBrush}" IsReadOnly="True">
                            <DataGrid.Style>
                                <Style TargetType="DataGrid" BasedOn="{StaticResource {x:Type DataGrid}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Step.Type}" Value="CHECKVAL">
                                            <Setter Property="ItemsSource" Value="{Binding Data}" />
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.Style>
                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Step" Binding="{Binding Step.Name}" Width="Auto" />
                    <DataGridTextColumn Header="#" Binding="{Binding Occurence}" Width="Auto" />
                    <DataGridTextColumn Header="Last check" Binding="{Binding LastCheck}" Width="Auto" />
                    <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="Auto" />
                    <DataGridTextColumn Header="Duration" Binding="{Binding Duration[_TOTAL_DEFAULT]}" Width="Auto" />
                    <DataGridTemplateColumn Header="Result" Width="*">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding ResultCount}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ResultCount}" Value="-1">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <ProgressBar IsIndeterminate="True" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
                <!--<DataGrid.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type GroupItem}">
                                            <StackPanel>
                                                <DataGridCell BorderThickness="0" Grid.ColumnSpan="2" Margin="0" Background="LightGray" Padding="0">
                                                    <Grid DataContext="{Binding Items[0]}" Height="Auto">
                                                        <TextBlock FontWeight="Bold" Text="{Binding Step.Name, Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,3,0,0" />
                                                        <TextBlock Text="{Binding Step.Type, Mode=OneWay}" HorizontalAlignment="Right" TextAlignment="Right" VerticalAlignment="Top" Margin="0,0,40,0"/>
                                                        <Button Name="btnCancel" Style="{StaticResource MetroCircleButtonStyle}" Background="White" BorderBrush="OrangeRed" Tag="{Binding [4]}" VerticalAlignment="Top" BorderThickness="1" Height="40" HorizontalAlignment="Right" Width="40">
                                                            <Path Width="16" Height="16" Fill="OrangeRed" Stretch="Uniform">
                                                                <Path.Style>
                                                                    <Style TargetType="Path">
                                                                        <Setter Property="Data" Value="{iconPacks:Material Kind=DeleteOutline}" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Result}" Value="Checking..." >
                                                                                <Setter Property="Data" Value="{StaticResource appbar_close}" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Path.Style>
                                                            </Path>
                                                        </Button>
                                                    </Grid>
                                                </DataGridCell>
                                                <ItemsPresenter />
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                        <GroupStyle.Panel>
                            <ItemsPanelTemplate>
                                <DataGridRowsPresenter/>
                            </ItemsPanelTemplate>
                        </GroupStyle.Panel>
                    </GroupStyle>
                </DataGrid.GroupStyle>-->
            </DataGrid>
        </DockPanel>
        <GridSplitter Grid.Row="4" Height="2" Background="LightGray" />
        <DockPanel Grid.Row="5">
            <WrapPanel Grid.Column="7" Style="{StaticResource ToolBar}">
                <Button Content="Copy" ToolTip="Copy to clipboard" BorderBrush="Magenta" ext:CustomAdorner.Image="{iconPacks:Material Kind=ContentCopy}" IsEnabled="False" x:Name="btnCopy" Click="btnCopy_Click" />
            </WrapPanel>
            <charts:CartesianChart x:Name="chart" Series="{Binding ResultSeriesMappings.Values}">
                <!--ScrollMode="X" DisableAnimations="True" Margin="0" DataTooltip="{x:Null}" Hoverable="False">-->
                <!--<charts:CartesianChart.XAxes>
                    <charts:Axis></charts:Axis>
                </charts:CartesianChart.XAxes>
                <charts:CartesianChart.AxisY>
                    <charts:LogarithmicAxis></charts:LogarithmicAxis>
                    <charts:LogarithmicAxis Position="RightTop"></charts:LogarithmicAxis>
                </charts:CartesianChart.AxisY>-->
            </charts:CartesianChart>
        </DockPanel>
    </Grid>
</Page>
